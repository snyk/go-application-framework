// Code generated by MockGen. DO NOT EDIT.
// Source: ldx_sync_config.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ldx_sync_config "github.com/snyk/go-application-framework/pkg/apiclients/ldx_sync_config"
)

// MockLdxSyncConfigClient is a mock of LdxSyncConfigClient interface.
type MockLdxSyncConfigClient struct {
	ctrl     *gomock.Controller
	recorder *MockLdxSyncConfigClientMockRecorder
}

// MockLdxSyncConfigClientMockRecorder is the mock recorder for MockLdxSyncConfigClient.
type MockLdxSyncConfigClientMockRecorder struct {
	mock *MockLdxSyncConfigClient
}

// NewMockLdxSyncConfigClient creates a new mock instance.
func NewMockLdxSyncConfigClient(ctrl *gomock.Controller) *MockLdxSyncConfigClient {
	mock := &MockLdxSyncConfigClient{ctrl: ctrl}
	mock.recorder = &MockLdxSyncConfigClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLdxSyncConfigClient) EXPECT() *MockLdxSyncConfigClientMockRecorder {
	return m.recorder
}

// GetConfiguration mocks base method.
func (m *MockLdxSyncConfigClient) GetConfiguration(ctx context.Context, params ldx_sync_config.GetConfigurationParams) (*ldx_sync_config.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfiguration", ctx, params)
	ret0, _ := ret[0].(*ldx_sync_config.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfiguration indicates an expected call of GetConfiguration.
func (mr *MockLdxSyncConfigClientMockRecorder) GetConfiguration(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfiguration", reflect.TypeOf((*MockLdxSyncConfigClient)(nil).GetConfiguration), ctx, params)
}
