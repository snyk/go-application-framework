# OpenAPI spec generated by vervet, DO NOT EDIT
components:
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      example: "2021-07-01T00:00:00Z"
      schema:
        format: date-time
        type: string
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
      schema:
        format: uuid
        type: string
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      example: "2021-08-02T00:00:00Z"
      schema:
        format: date-time
        type: string
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/QueryVersion'
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/ActualVersion'
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      schema:
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
        example: ga
        type: string
  parameters:
    JobIdParam:
      description: The job id
      in: path
      name: job_id
      required: true
      schema:
        format: uuid
        type: string
    OrgIdParam:
      description: The org id
      in: path
      name: org_id
      required: true
      schema:
        format: uuid
        type: string
    TestIdParam:
      description: The asset id
      in: path
      name: test_id
      required: true
      schema:
        format: uuid
        type: string
    io.snyk.api.request.PaginatedRequest.ending_before:
      description: Opaque pagination cursor for reverse traversal.
      explode: false
      in: query
      name: ending_before
      schema:
        type: string
    io.snyk.api.request.PaginatedRequest.limit:
      description: The number of items to return.
      explode: false
      in: query
      name: limit
      schema:
        default: 10
        format: int8
        maximum: 100
        minimum: 1
        type: integer
    io.snyk.api.request.PaginatedRequest.starting_after:
      description: Opaque pagination cursor for forward traversal.
      explode: false
      in: query
      name: starting_after
      schema:
        type: string
    io.snyk.api.request.SnykApiRequest.interactionId:
      description: |-
        Identifies the Snyk client interaction in which this API request occurs.

        The identifier is an opaque string. though at the time of writing it may either be a
        uuid or a urn containing a uuid and some metadata.
        to be safe, the
      in: header
      name: snyk-interaction-id
      schema:
        maxLength: 128
        minLength: 36
        type: string
    io.snyk.api.request.SnykApiRequest.requestId:
      description: |-
        A unique ID assigned to each API request, for tracing and troubleshooting.

        Snyk clients can optionally provide this ID.
      in: header
      name: snyk-request-id
      schema:
        format: uuid
        type: string
    io.snyk.api.request.SnykApiRequest.version:
      description: The API version requested.
      explode: false
      in: query
      name: version
      required: true
      schema:
        type: string
  responses:
    "400":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Bad Request: A parameter provided as a part of the request was
        invalid.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "401":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Unauthorized: the request requires an authentication token.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "404":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Not Found: The resource being operated on could not be found.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "500":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Internal Server Error: An error was encountered while attempting
        to process the request.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
  schemas:
    ActualVersion:
      description: Resolved API version
      pattern: ^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$
      type: string
    CveProblem:
      description: |-
        CVE designation according to the public Common Vulnerability Exposure
        database.
      properties:
        id:
          example: CVE-2006-7135
          pattern: ^CVE-[0-9]+-[0-9]+$
          type: string
        source:
          enum:
          - cve
          type: string
      required:
      - source
      - id
      type: object
    CweProblem:
      description: |-
        CWE classification according to MITRE's Common Weakness Enumeration (CWE)
        database.
      properties:
        id:
          example: CWE-190
          pattern: ^CWE-[0-9]+$
          type: string
        source:
          enum:
          - cwe
          type: string
      required:
      - source
      - id
      type: object
    DeepcodeBundleSubject:
      description: |-
        Test subject representing source code uploaded to Snyk using DeepCode
        bundle APIs.
      properties:
        asset_id:
          description: Asset associated with the tested content.
          format: uuid
          type: string
        bundle_id:
          description: Deepcode Bundle ID. These IDs are sha256 digests (32 bytes
            or 64 hex digits).
          pattern: ^[a-fA-F0-9]{64}$
          type: string
        path:
          default: .
          description: |-
            Path of the uploaded file or directory, relative to the client's current
            working directory.
          type: string
        type:
          enum:
          - deepcode_bundle
          type: string
      required:
      - type
      - bundle_id
      - path
      - asset_id
      type: object
    DepGraphSubject:
      description: Test subject representing a Snyk dependency graph (a legacy SBOM
        format).
      properties:
        asset_id:
          description: Asset associated with the tested content.
          format: uuid
          type: string
        source_files:
          description: |-
            Source file paths within the asset's contents from which the SBOM was derived.

            For some managed package ecosystems (examples: Maven, Yarn workspaces),
            Snyk might derive an SBOM from many files.
          items:
            type: string
          type: array
        type:
          enum:
          - dep_graph
          type: string
      required:
      - type
      - source_files
      - asset_id
      type: object
    DepGraphSubjectCreate:
      description: Test subject representing a Snyk dependency graph (a legacy SBOM
        format).
      properties:
        asset_id:
          description: Asset associated with the tested content.
          format: uuid
          type: string
        dep_graph:
          allOf:
          - $ref: '#/components/schemas/io.snyk.api.v1testdepgraph.request.DepGraph'
          description: |-
            When creating a test, provide the dep-graph contents inline to the request.

            This attribute is only available when creating a new Test.
        source_files:
          description: |-
            Source file paths within the asset's contents from which the SBOM was derived.

            For some managed package ecosystems (examples: Maven, Yarn workspaces),
            Snyk might derive an SBOM from many files.
          items:
            type: string
          type: array
        type:
          enum:
          - dep_graph
          type: string
      required:
      - type
      - dep_graph
      - source_files
      - asset_id
      type: object
    DependencyPathEvidence:
      description: |-
        Dependency path to a software component within an SBOM dependency graph.

        Finding types: SCA
      properties:
        path:
          description: |-
            Series of component identifiers starting from the top-level component tested,
            and ending in the vulnerable software component.

            The identifiers are domain-specific and determined by the SBOM Asset under test.
          example:
          - my-tested-package@1.0.0
          - prop-types@15.7.2
          - loose-envify@1.4.0
          - js-tokens@4.0.0
          items:
            type: string
          type: array
        source:
          enum:
          - dependency_path
          type: string
      required:
      - source
      - path
      type: object
    Error:
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
      properties:
        code:
          description: An application-specific error code, expressed as a string value.
          example: entity-not-found
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: 'The request was missing these required fields: ...'
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/ErrorLink'
        meta:
          additionalProperties: true
          example:
            key: value
          type: object
        source:
          additionalProperties: false
          example:
            pointer: /data/attributes
          properties:
            parameter:
              description: A string indicating which URI query parameter caused the
                error.
              example: param1
              type: string
            pointer:
              description: A JSON Pointer [RFC6901] to the associated entity in the
                request document.
              example: /data/attributes
              type: string
          type: object
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          example: "400"
          pattern: ^[45]\d\d$
          type: string
        title:
          description: A short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization.
          example: Bad request
          type: string
      required:
      - status
      - detail
      type: object
    ErrorDocument:
      additionalProperties: false
      example:
        errors:
        - detail: Permission denied for this resource
          status: "403"
        jsonapi:
          version: "1.0"
      properties:
        errors:
          example:
          - detail: Permission denied for this resource
            status: "403"
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
      - jsonapi
      - errors
      type: object
    ErrorLink:
      additionalProperties: false
      description: A link that leads to further details about this particular occurrance
        of the problem.
      example:
        about: https://example.com/about_this_error
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    Evidence:
      description: |-
        Supporting evidence for (rather than representative of) the finding in other
        security domains and systems, lacking a well-known identifier.

        More detailed attributes may also be included inline, especially when this
        information is not yet generally available in a well-known public APIs.

        Examples include:
        - Detailed enumeration of dependency paths
        - Execution flows leading to a code rule violation
      discriminator:
        mapping:
          dependency_path: '#/components/schemas/DependencyPathEvidence'
          execution_flow: '#/components/schemas/ExecutionFlowEvidence'
          other: '#/components/schemas/OtherEvidence'
        propertyName: source
      oneOf:
      - $ref: '#/components/schemas/DependencyPathEvidence'
      - $ref: '#/components/schemas/ExecutionFlowEvidence'
      - $ref: '#/components/schemas/OtherEvidence'
    ExecutableLocation:
      description: |-
        A location within an asset's contents that can be executed, as part of a
        program flow.
      discriminator:
        mapping:
          other: '#/components/schemas/OtherLocation'
          source_file: '#/components/schemas/SourceFileLocation'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/SourceFileLocation'
      - $ref: '#/components/schemas/OtherLocation'
    ExecutionFlowEvidence:
      description: Indicate a program flow of execution as additional evidence for
        the finding.
      properties:
        locations:
          description: |-
            Sequence of locations within this flow of execution.

            For example, a sequence of locations connecting the "source" location
            where input data is obtained, to a "sink" location where it is used.
          items:
            $ref: '#/components/schemas/ExecutableLocation'
          minItems: 1
          type: array
        source:
          enum:
          - execution_flow
          type: string
      required:
      - source
      - locations
      type: object
    FindingAttributes:
      description: FindingAttributes represent the attributes of a Finding resource.
      properties:
        cause_of_failure:
          default: false
          description: Did this finding cause the test outcome to fail?
          type: boolean
        description:
          description: A longer human-readable text description for this finding.
          type: string
        evidence:
          description: |-
            Supporting evidence for (rather than representative of) the finding in
            other security domains and systems, lacking a well-known identifier.
          example:
          - path:
            - my-app:1.0.0
            - log4j:2.4.1
            source: dependency_path
          items:
            $ref: '#/components/schemas/Evidence'
          type: array
        finding_type:
          allOf:
          - $ref: '#/components/schemas/FindingType'
          description: Type of finding.
        key:
          description: |-
            An opaque key used for aggregating the finding across multiple test
            executions operating on the same or originating Asset.

            Findings within a Test execution are aggregated by this key.
          type: string
        locations:
          description: Locations in the Asset's contents where the finding may be
            found.
          items:
            $ref: '#/components/schemas/FindingLocation'
          type: array
        policy_modifications:
          description: Attributes which have been modified by policy decisions.
          items:
            $ref: '#/components/schemas/PolicyModification'
          type: array
        problems:
          description: |-
            Problems are representative of the finding in other security domains and
            systems with a well-known identifier.
          example:
          - id: CWE-943
            source: cwe
          - default_configuration:
              severity: high
            help:
              markdown: help text goes here
            id: javascript/NoSqli
            name: NoSqli
            properties:
              categories:
              - Security
              cwe:
              - CWE-943
              example_commit_descriptions: []
              example_commit_fixes: []
              precision: very-high
              repo_dataset_size: 30
              tags:
              - javascript
              - NoSqli
            short_description:
              text: NoSQL Injection
            source: snyk_code_rule
          items:
            $ref: '#/components/schemas/Problem'
          type: array
        rating:
          allOf:
          - $ref: '#/components/schemas/Rating'
          description: Qualitative ratings on a finding.
        risk:
          allOf:
          - $ref: '#/components/schemas/Risk'
          description: Qualitative risk analysis on a finding.
        suppression:
          allOf:
          - $ref: '#/components/schemas/Suppression'
          description: Indication of whether a finding is suppressed by a policy decision.
        title:
          description: A human-readable title for this finding.
          type: string
      required:
      - finding_type
      - title
      - description
      - key
      - cause_of_failure
      - problems
      - evidence
      - locations
      - rating
      - risk
      type: object
    FindingData:
      description: FindingData represents a Finding resource object.
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/FindingAttributes'
          readOnly: true
        id:
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to external resources outside this API.

            Because these are not REST API resources, they are expressed here as links,
            rather than as relationships.
          properties:
            snyk_advisory:
              allOf:
              - $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
              description: |-
                Link to Snyk's vulnerability advisory for more information on the
                finding, if applicable.
              example: https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720
            snyk_learn:
              allOf:
              - $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
              description: Link to a Snyk Learn lesson relevant to the finding, if
                applicable.
              example: https://learn.snyk.io/lesson/csrf-attack/
          type: object
        relationships:
          properties:
            asset:
              description: Originating asset in which this finding was discovered.
              properties:
                data:
                  properties:
                    id:
                      format: uuid
                      type: string
                    type:
                      pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                      type: string
                  required:
                  - type
                  - id
                  type: object
                links:
                  $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
                meta:
                  $ref: '#/components/schemas/io.snyk.api.common.Meta'
              required:
              - links
              type: object
            org:
              description: Snyk organization scope in which the finding was discovered.
              properties:
                data:
                  properties:
                    id:
                      format: uuid
                      type: string
                    type:
                      pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                      type: string
                  required:
                  - type
                  - id
                  type: object
              type: object
            policy:
              description: Relate to the policy or policies applied to this finding.
              properties:
                data:
                  properties:
                    id:
                      format: uuid
                      type: string
                    type:
                      pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                      type: string
                  required:
                  - type
                  - id
                  type: object
                links:
                  $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
                meta:
                  $ref: '#/components/schemas/io.snyk.api.common.Meta'
              required:
              - links
              type: object
            test:
              description: Test in which this finding was discovered.
              properties:
                data:
                  properties:
                    id:
                      format: uuid
                      type: string
                    type:
                      pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                      type: string
                  required:
                  - type
                  - id
                  type: object
                links:
                  $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
                meta:
                  $ref: '#/components/schemas/io.snyk.api.common.Meta'
              required:
              - links
              type: object
          readOnly: true
          type: object
        type:
          enum:
          - findings
          readOnly: true
          type: string
      required:
      - id
      - type
      - attributes
      type: object
    FindingLocation:
      description: Location within an Asset's contents where the finding was discovered.
      discriminator:
        mapping:
          other: '#/components/schemas/OtherLocation'
          package_dependency: '#/components/schemas/PackageDependency'
          source_file: '#/components/schemas/SourceFileLocation'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/PackageDependency'
      - $ref: '#/components/schemas/SourceFileLocation'
      - $ref: '#/components/schemas/OtherLocation'
    FindingSummary:
      description: Summary of findings found by the Test.
      properties:
        count:
          description: Total count of findings.
          example: 30
          format: uint32
          type: integer
        count_by:
          additionalProperties:
            additionalProperties:
              format: uint32
              type: integer
            type: object
          description: |-
            Counts of findings grouped by various finding attributes.

            The outer record is keyed by finding attribute name. The value is a record
            keyed by distinct values of this attribute, whose value is the number of
            findings with a distinct value.
          example:
            result_type:
              sast: 12
              sca: 18
            severity:
              critical: 2
              high: 3
              low: 15
              medium: 10
          type: object
      required:
      - count
      type: object
    FindingType:
      description: Type of Finding which was discovered.
      enum:
      - sca
      - sast
      - dast
      - other
      type: string
    GitURLCoordinatesSubject:
      description: |-
        Test subject representing a source tree located in a Git repository that
        has a Snyk SCM integration.
      properties:
        asset_id:
          description: Asset associated with the tested content.
          format: uuid
          type: string
        integration_id:
          description: Integration used to access the Git SCM repository in order
            to retrieve its source contents.
          format: uuid
          type: string
        repo_url:
          description: Repo URL is the location of the Git SCM repository to test.
          format: uri
          type: string
        revision:
          description: Revision is the specific Git commit in the repository to test.
          pattern: ^[a-f0-9]{40,}$
          type: string
        type:
          enum:
          - git_url_coordinates
          type: string
      required:
      - type
      - integration_id
      - repo_url
      - revision
      - asset_id
      type: object
    GithubSecurityAdvisoryProblem:
      description: Github Security Advisory associated with this finding.
      properties:
        id:
          example: GHSA-pxg6-pf52-xh8x
          type: string
        source:
          enum:
          - ghsa
          type: string
      required:
      - source
      - id
      type: object
    JobAttributes:
      description: JobAttributes represents the attributes of a Job resource
      properties:
        created_at:
          description: Creation time of the job resource
          format: date-time
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/TestExecutionStates'
          description: State of the test, whether it is pending, running, complete
            or errored.
      required:
      - status
      - created_at
      type: object
    JobData:
      description: JobData represents a Job resource object.
      properties:
        attributes:
          $ref: '#/components/schemas/JobAttributes'
        id:
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/JobRelationships'
        type:
          enum:
          - test_jobs
          type: string
      required:
      - id
      - attributes
      - type
      type: object
    JobRelationshipField:
      properties:
        data:
          properties:
            id:
              format: uuid
              type: string
            type:
              enum:
              - tests
              type: string
          required:
          - id
          - type
          type: object
      required:
      - data
      type: object
    JobRelationships:
      properties:
        test:
          $ref: '#/components/schemas/JobRelationshipField'
      required:
      - test
      type: object
    JsonApi:
      additionalProperties: false
      example:
        version: "1.0"
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          example: "1.0"
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)$
          type: string
      required:
      - version
      type: object
    LinkProperty:
      example: https://example.com/api/resource
      oneOf:
      - description: A string containing the link’s URL.
        example: https://example.com/api/resource
        type: string
      - additionalProperties: false
        example:
          href: https://example.com/api/resource
        properties:
          href:
            description: A string containing the link’s URL.
            example: https://example.com/api/resource
            type: string
          meta:
            $ref: '#/components/schemas/Meta'
        required:
        - href
        type: object
    LocalPolicy:
      description: Locally configured policy options for determining outcome of this
        specific test.
      properties:
        risk_score_threshold:
          description: Findings of equal or greater risk score will fail the test.
          format: uint16
          maximum: 1000
          minimum: 0
          type: integer
        severity_threshold:
          allOf:
          - $ref: '#/components/schemas/Severity'
          default: medium
          description: Findings of equal or greater severity will fail the test.
        suppress_pending_ignores:
          default: false
          description: |-
            Suppress ignores pending approval, so that they do not fail the test. If
            allowed by administrators, this might be set in developer workflows in
            order to unblock local development while an ignore is pending approval.
          type: boolean
      required:
      - suppress_pending_ignores
      type: object
    ManagedPolicyRef:
      description: Reference to a managed policy.
      properties:
        id:
          $ref: '#/components/schemas/uuid'
      required:
      - id
      type: object
    Meta:
      additionalProperties: true
      description: Free-form object that may contain non-standard information.
      example:
        key1: value1
        key2:
          sub_key: sub_value
        key3:
        - array_value1
        - array_value2
      type: object
    OtherEvidence:
      description: |-
        Evidence which this API version is not capable of expressing.

        More information may be available in a newer version of this API.
      properties:
        source:
          enum:
          - other
          type: string
      required:
      - source
      type: object
    OtherLocation:
      description: |-
        Finding locations which this API version is not capable of expressing.

        This location may be available in a newer version of this API.
      properties:
        type:
          enum:
          - other
          type: string
      required:
      - type
      type: object
    OtherProblem:
      description: |-
        Problem which this API version is not capable of expressing.

        This problem may be available in a newer version of this API.
      properties:
        source:
          enum:
          - other
          type: string
      required:
      - source
      type: object
    OtherSubject:
      description: OtherSubject represents any subject we don't yet have a way to
        express.
      properties:
        asset_id:
          description: Asset associated with the tested content.
          format: uuid
          type: string
        type:
          enum:
          - other
          type: string
      required:
      - type
      type: object
    PackageDependency:
      description: |-
        Package dependency version.

        Finding type: SCA
      example:
        name: log4j
        type: package_dependency
        version: 2.4.1
      properties:
        name:
          type: string
        type:
          enum:
          - package_dependency
          type: string
        version:
          type: string
      required:
      - type
      - name
      - version
      type: object
    PassFail:
      description: Indicate whether a Test passes or fails.
      enum:
      - pass
      - fail
      type: string
    PolicyModification:
      description: Prior attribute values and the reason they were modified.
      properties:
        pointer:
          description: |-
            A JSON Pointer (RFC 6901) reference to the modified value, relative to
            the top-level attributes of the same Finding.
          example: /rating/severity
          type: string
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyRef'
          description: Policy which modified the finding, if available.
        prior:
          description: The prior value at the referenced pointer.
          example: low
        reason:
          description: A human-readable explanation for why the value was modified.
          example: CWE-123 poses an elevated risk to workloads exposed to the public
            internet
          type: string
      required:
      - pointer
      - reason
      type: object
    PolicyRef:
      description: Reference to a single policy.
      oneOf:
      - enum:
        - local_policy
        type: string
      - $ref: '#/components/schemas/ManagedPolicyRef'
    PolicyRefSet:
      description: A set of local and/or managed policies.
      properties:
        ids:
          items:
            $ref: '#/components/schemas/uuid'
          type: array
        local_policy:
          type: boolean
      required:
      - ids
      type: object
    Problem:
      description: |-
        Problems are representative of the finding in other security domains and
        systems with a well-known identifier.

        More detailed attributes for the problem may be included, especially when
        this information is not yet readily available in a relatable public API.

        Problems are defined in industry standard taxonomies such as:
        - MITRE's Common Weakness Enumeration (CWE)
        - Common Vulnerability Exposures (CVE)

        Snyk systems also define problems, such as:
        - Code SAST rules
        - VulnDB vulnerabilities
        - Software licenses
      discriminator:
        mapping:
          cve: '#/components/schemas/CveProblem'
          cwe: '#/components/schemas/CweProblem'
          ghsa: '#/components/schemas/GithubSecurityAdvisoryProblem'
          other: '#/components/schemas/OtherProblem'
          snyk_cloud_rule: '#/components/schemas/SnykCloudRuleProblem'
          snyk_code_rule: '#/components/schemas/SnykCodeRuleProblem'
          snyk_license: '#/components/schemas/SnykLicenseProblem'
          snyk_vuln: '#/components/schemas/SnykVulnProblem'
        propertyName: source
      oneOf:
      - $ref: '#/components/schemas/CweProblem'
      - $ref: '#/components/schemas/SnykCodeRuleProblem'
      - $ref: '#/components/schemas/CveProblem'
      - $ref: '#/components/schemas/SnykVulnProblem'
      - $ref: '#/components/schemas/SnykLicenseProblem'
      - $ref: '#/components/schemas/SnykCloudRuleProblem'
      - $ref: '#/components/schemas/GithubSecurityAdvisoryProblem'
      - $ref: '#/components/schemas/OtherProblem'
    QueryVersion:
      description: Requested API version
      pattern: ^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$
      type: string
    Rating:
      description: Rating represents qualitative metrics on a finding.
      properties:
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: Severity level of the finding.
      required:
      - severity
      type: object
    Risk:
      description: Risk represents Snyk's risk assessment of a finding.
      properties:
        risk_score:
          allOf:
          - $ref: '#/components/schemas/RiskScore'
          description: Risk score assessment for the finding.
      type: object
    RiskScore:
      description: |-
        Risk score assigns a numeric metric based on various attributes of the
        finding and the risk context in which it was discovered.
      properties:
        value:
          format: uint16
          maximum: 1000
          type: integer
      required:
      - value
      type: object
    SBOMReachabilitySubject:
      description: Test subject for SBOM test with reachability analysis.
      properties:
        asset_id:
          description: Asset associated with the tested content.
          format: uuid
          type: string
        code_bundle_id:
          description: Source code to inspect for the reach of the vulnerable dependencies.
          pattern: ^[a-fA-F0-9]{64}$
          type: string
        sbom_bundle_id:
          description: The SBOM to test for vulnerable dependencies.
          pattern: ^[a-fA-F0-9]{64}$
          type: string
        type:
          enum:
          - sbom_reachability
          type: string
      required:
      - type
      - sbom_bundle_id
      - code_bundle_id
      - asset_id
      type: object
    Severity:
      description: Indicate the severity of a finding discovered by a Test.
      enum:
      - critical
      - high
      - medium
      - low
      - none
      - other
      type: string
    SnykCloudRuleProblem:
      description: Configuration policy violation from Snyk's Cloud Rules Database.
      properties:
        id:
          example: SNYK-CC-TF-14
          pattern: ^SNYK-CC-([^-]+)+[-][0-9]+$
          type: string
        source:
          enum:
          - snyk_cloud_rule
          type: string
      required:
      - source
      - id
      type: object
    SnykCodeRuleProblem:
      description: Static code analysis rule, from the standard Snyk Code rule set.
      properties:
        default_configuration:
          $ref: '#/components/schemas/snykcoderule.Configuration'
        help:
          $ref: '#/components/schemas/snykcoderule.MultiformatMessageString'
        id:
          example: javascript/NoSqli
          type: string
        name:
          type: string
        properties:
          $ref: '#/components/schemas/snykcoderule.Properties'
        short_description:
          $ref: '#/components/schemas/snykcoderule.MultiformatMessageString'
        source:
          enum:
          - snyk_code_rule
          type: string
      required:
      - source
      - id
      - name
      - short_description
      - default_configuration
      - help
      - properties
      type: object
    SnykLicenseProblem:
      description: |-
        License from Snyk's Vulnerability Database.

        A software license can be considered a problem when policy designates it as
        a business risk.
      properties:
        affected_hash_ranges:
          description: |-
            Range of commit hashes known to be affected by this problem.

            Generally used with package ecosystems which use Git SCM repositories for
            distribution.
          items:
            type: string
          type: array
        affected_hashes:
          description: List of specific commit hashes known to be affected by this
            problem.
          items:
            type: string
          type: array
        affected_versions:
          description: |-
            All the package versions which are affected by this problem. Expect this to
            be smaller than 0 ([,0] or <0.0.0 ) for vulnerabilities that have been
            revoked. Per ecosystem, the official package version guidelines are
            being used.
          items:
            type: string
          type: array
        created_at:
          description: Timestamp indicating when the problem was orginally created.
          example: "2022-05-17T14:23:25Z"
          format: date-time
          type: string
        ecosystem:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.PackageEcosystem'
          description: |-
            Package ecosystem in which the package is distributed.

            This applies to private packages distributed with ecosystem tooling as well
            as those publicly distributed.
        id:
          example: snyk:lic:golang:github.com:hashicorp:terraform-svchost:MPL-2.0
          pattern: ^snyk(:[^:]+)+$
          type: string
        license:
          description: Software license identifier.
          example: MPL-2.0
          type: string
        package_name:
          description: Package name.
          type: string
        package_version:
          description: Package version.
          type: string
        published_at:
          description: Timestamp indicating when the problem was published.
          example: "2022-05-17T14:23:25Z"
          format: date-time
          type: string
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: The Snyk curated or recommended vulnerability severity for
            the problem.
          example: critical
        source:
          enum:
          - snyk_license
          type: string
      required:
      - source
      - id
      - ecosystem
      - created_at
      - package_name
      - package_version
      - published_at
      - severity
      - license
      type: object
    SnykVulnProblem:
      description: Vulnerability from Snyk's Vulnerability Database.
      properties:
        affected_hash_ranges:
          description: |-
            Range of commit hashes known to be affected by this problem.

            Generally used with package ecosystems which use Git SCM repositories for
            distribution.
          items:
            type: string
          type: array
        affected_hashes:
          description: List of specific commit hashes known to be affected by this
            problem.
          items:
            type: string
          type: array
        affected_versions:
          description: |-
            All the package versions which are affected by this problem. Expect this to
            be smaller than 0 ([,0] or <0.0.0 ) for vulnerabilities that have been
            revoked. Per ecosystem, the official package version guidelines are
            being used.
          items:
            type: string
          type: array
        created_at:
          description: Timestamp indicating when the problem was orginally created.
          example: "2022-05-17T14:23:25Z"
          format: date-time
          type: string
        credits:
          description: Discoverer / Reporter of the vulnerability.
          example:
          - Snyk Research Team
          items:
            type: string
          type: array
        cvss_base_score:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.CvssScore'
          description: |-
            The Snyk curated or recommended CVSS score, in the highest CVSS version
            supported and available for the issue, computed based on the Base Score
            of the cvss_vector field.
          example: 9.8
        cvss_sources:
          description: |-
            All CVSS vector information (Base), with corresponding sources, scores
            and severities applying to the same vulnerability. The data is sourced
            from external security vendors (e.g. NVD), as well as assigned by Snyk.

            The “type” key indicates whether this is the “primary” (recommended) CVSS
            to use, or “secondary” (provided as additional information).

            Information might be partial and will be updated upon evaluation by
            external sources.
          items:
            $ref: '#/components/schemas/snykvulndb.CvssSource'
          type: array
        cvss_vector:
          description: |-
            The primary CVSS Base vector, either Snyk curated or from the recommended
            source, in v3.0, v3.1 or v4.0 CVSS versions. Might include exploit
            values where applicable.
          example: CVSS:4.0/AV:N/AC:H/AT:N/PR:N/UI:N/VC:H/VI:H/VA:L/SC:N/SI:N/SA:N
          type: string
        disclosed_at:
          description: |-
            Timestamp of when the vulnerability was first made publicly available
            (either known to us or as appears in the vulnerability source)
          example: "2022-10-09T23:55:03Z"
          format: date-time
          type: string
        ecosystem:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.PackageEcosystem'
          description: |-
            Package ecosystem in which the package is distributed.

            This applies to private packages distributed with ecosystem tooling as well
            as those publicly distributed.
        exploit_details:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.ExploitDetails'
          description: Details about the maturity of exploits for this vulnerability.
        id:
          example: SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720
          pattern: ^SNYK(-[^-]+)+[-][0-9]+$
          type: string
        initially_fixed_in_versions:
          description: |-
            This indicates the earliest version that is vulnerability-free. As this
            might be a backported fix, this does not mean that newer versions aren’t
            vulnerable. vulnerable_versions should also be used to determine whether
            a given version is vulnerable.
          items:
            type: string
          type: array
        is_fixable:
          default: false
          description: |-
            Is there a fixed version published to the relevant package manager
            repository- i.e., a newer version without this specific vulnerability
          type: boolean
        is_malicious:
          default: false
          description: Indicate if the vulnerability is known to mark a malicious
            package.
          type: boolean
        is_social_media_trending:
          default: false
          description: |-
            This boolean field is true when increased activity is detected related to
            this vulnerability. The "trending" determination is based on social media
            activity, using Snyk models which are tuned to detect an increased chance
            of near-future exploitation.
          type: boolean
        modified_at:
          description: |-
            Timestamp indicating when the vulnerability was last modified (anything
            from typo to version change). When the vulnerability is first added, this
            field and published will be (almost) identical.
          format: date-time
          type: string
        package_name:
          description: Package name.
          type: string
        package_repository_url:
          description: Link to the package repository containing the vulnerable package.
          example: https://repo.maven.apache.org/maven2
          format: uri
          type: string
        package_version:
          description: Package version.
          type: string
        published_at:
          description: Timestamp indicating when the problem was published.
          example: "2022-05-17T14:23:25Z"
          format: date-time
          type: string
        references:
          description: |-
            Links to external websites related to the vulnerability. Links also
            include a user-facing curated title.
          items:
            $ref: '#/components/schemas/snykvulndb.ReferenceLinks'
          type: array
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: The Snyk curated or recommended vulnerability severity for
            the problem.
          example: critical
        source:
          enum:
          - snyk_vuln
          type: string
        vendor_severity:
          description: |-
            The assigned severity/impact/urgency rating by the distros teams for the
            specific vulnerability package and release of the operating system (if available).
          type: string
        vulnerable_functions:
          additionalProperties:
            $ref: '#/components/schemas/snykvulndb.VulnerableFunction'
          description: Known vulnerable functions in software packages.
          type: object
      required:
      - source
      - id
      - ecosystem
      - created_at
      - package_name
      - package_version
      - published_at
      - severity
      - credits
      - cvss_base_score
      - cvss_sources
      - cvss_vector
      - disclosed_at
      - exploit_details
      - initially_fixed_in_versions
      - is_fixable
      - is_malicious
      - is_social_media_trending
      - modified_at
      - references
      type: object
    SourceFileLocation:
      description: |-
        Source file location.

        Finding types: SCA, SAST
      example:
        file_path: package.json
        from_column: 12
        from_line: 24
        to_column: 36
        to_line: 24
        type: source_file
      properties:
        file_path:
          type: string
        from_column:
          default: 0
          format: int32
          type: integer
        from_line:
          format: int32
          type: integer
        to_column:
          format: int32
          type: integer
        to_line:
          format: int32
          type: integer
        type:
          enum:
          - source_file
          type: string
      required:
      - type
      - file_path
      - from_line
      type: object
    Suppression:
      description: |-
        Details about a finding's suppression in test results.

        Suppressed findings do not contribute to the test outcome, but they are still
        provided in the results.
      properties:
        justification:
          description: Reason given for an ignore pending approval.
          type: string
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyRef'
          description: Policy responsible for the state of suppression represented
            here, if available.
        status:
          allOf:
          - $ref: '#/components/schemas/SuppressionStatus'
          description: Status of the suppression.
      required:
      - status
      type: object
    SuppressionStatus:
      description: Status of a suppression on a finding.
      enum:
      - ignored
      - pending_ignore_approval
      - other
      type: string
    TestAttributes:
      description: TestAttributes represents the attributes of a Test resource.
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/TestConfiguration'
          description: |-
            The test configuration. If not specified, caller accepts test configuration
            defaults within the calling scope (org, group or tenant settings, etc).
        created_at:
          description: Creation time of the test resource.
          format: date-time
          readOnly: true
          type: string
        effective_summary:
          allOf:
          - $ref: '#/components/schemas/FindingSummary'
          description: |-
            Summary of findings discovered by the test, effective to the outcome
            decision. This summary excludes findings suppressed by policy.

            This attribute is set when the test execution
            completes (state.execution == 'finished') successfully (without fatal errors
            blocking an outcome).
          readOnly: true
        outcome:
          allOf:
          - $ref: '#/components/schemas/TestOutcome'
          description: |-
            The outcome of the test.

            This attribute is set when the test execution
            completes (state.execution == 'completed') successfully (without fatal errors
            blocking an outcome).
          readOnly: true
        raw_summary:
          allOf:
          - $ref: '#/components/schemas/FindingSummary'
          description: |-
            Summary of findings regardless of whether they are effective or not. This
            summary includes all findings, even those suppressed by policy.

            This attribute is set when the test execution
            completes (state.execution == 'finished') successfully (without fatal errors
            blocking an outcome).
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/TestState'
          description: The state of the test's execution.
          readOnly: true
        subject:
          allOf:
          - $ref: '#/components/schemas/TestSubject'
          description: The subject of a test.
      required:
      - subject
      - created_at
      - state
      type: object
    TestAttributesCreate:
      description: TestAttributes represents the attributes of a Test resource.
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/TestConfiguration'
          description: |-
            The test configuration. If not specified, caller accepts test configuration
            defaults within the calling scope (org, group or tenant settings, etc).
        subject:
          allOf:
          - $ref: '#/components/schemas/TestSubjectCreate'
          description: The subject of a test.
      required:
      - subject
      type: object
    TestConfiguration:
      description: Test configuration.
      properties:
        local_policy:
          allOf:
          - $ref: '#/components/schemas/LocalPolicy'
          description: |-
            Inline configured policy options for determining outcome of this specific test.

            If centrally managed policies are in scope, inline policies are overridden
            by managed policies. Policy references explain which policies were
            effective for test evaluation.
        publish_report:
          description: Publish findings into a report, viewable in the Snyk web UI.
          type: boolean
        timeout:
          allOf:
          - $ref: '#/components/schemas/TimeoutSpec'
          description: |-
            Maximum test time in seconds, after which execution will be cancelled and
            the test will fail with reason "timeout".
      type: object
    TestData:
      description: TestData represents a Test resource object.
      properties:
        attributes:
          $ref: '#/components/schemas/TestAttributes'
        id:
          format: uuid
          readOnly: true
          type: string
        links:
          properties:
            findings:
              allOf:
              - $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
              description: Link to the findings discovered by the test, when it completes.
          readOnly: true
          type: object
        type:
          enum:
          - tests
          type: string
      required:
      - id
      - type
      - attributes
      type: object
    TestDataCreate:
      description: TestData represents a Test resource object.
      properties:
        attributes:
          $ref: '#/components/schemas/TestAttributesCreate'
        type:
          enum:
          - tests
          type: string
      required:
      - type
      - attributes
      type: object
    TestExecutionStates:
      enum:
      - pending
      - started
      - finished
      - errored
      type: string
    TestOutcome:
      description: Outcome of a test; pass or fail.
      properties:
        breached_policies:
          allOf:
          - $ref: '#/components/schemas/PolicyRefSet'
          description: |-
            Test-level policies which were breached in a failing outcome.

            This array may be truncated for a large number of policies.
        reason:
          allOf:
          - $ref: '#/components/schemas/TestOutcomeReason'
          description: Reason for the outcome, if applicable.
        result:
          allOf:
          - $ref: '#/components/schemas/PassFail'
          description: Whether the test passed or failed.
      required:
      - result
      type: object
    TestOutcomeReason:
      description: Reasons for the outcome.
      enum:
      - policy_breach
      - timeout
      - other
      type: string
    TestRequestBody:
      description: TestRequestBody represents the request body used when creating
        an Test.
      properties:
        data:
          $ref: '#/components/schemas/TestDataCreate'
      required:
      - data
      type: object
    TestState:
      description: Test execution state information.
      properties:
        errors:
          description: |-
            Errors which occurred during the execution of a test.

            If execution state is errored, at least one error will be
            indicated here.
          items:
            $ref: '#/components/schemas/io.snyk.api.common.Error'
          type: array
        execution:
          allOf:
          - $ref: '#/components/schemas/TestExecutionStates'
          description: |-
            Current execution state of the test. This should be polled to completion
            ("completed" or "errored") when waiting for a test result.

            Completion is no guarantee of an outcome in the event of fatal errors.
        warnings:
          description: |-
            Non-fatal errors which occurred during the execution of a test.

            Execution state and warnings are not linked; any of passed/failed/
            errored tests can have warnings.
          items:
            $ref: '#/components/schemas/io.snyk.api.common.Error'
          type: array
      required:
      - execution
      type: object
    TestSubject:
      description: |-
        The subject of a test, which identifies the asset and content references
        necessary to conduct a security test.
      discriminator:
        mapping:
          deepcode_bundle: '#/components/schemas/DeepcodeBundleSubject'
          dep_graph: '#/components/schemas/DepGraphSubject'
          git_url_coordinates: '#/components/schemas/GitURLCoordinatesSubject'
          other: '#/components/schemas/OtherSubject'
          sbom_reachability: '#/components/schemas/SBOMReachabilitySubject'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DeepcodeBundleSubject'
      - $ref: '#/components/schemas/DepGraphSubject'
      - $ref: '#/components/schemas/GitURLCoordinatesSubject'
      - $ref: '#/components/schemas/SBOMReachabilitySubject'
      - $ref: '#/components/schemas/OtherSubject'
    TestSubjectCreate:
      description: |-
        The subject of a test, which identifies the asset and content references
        necessary to conduct a security test.
      discriminator:
        mapping:
          deepcode_bundle: '#/components/schemas/DeepcodeBundleSubject'
          dep_graph: '#/components/schemas/DepGraphSubjectCreate'
          git_url_coordinates: '#/components/schemas/GitURLCoordinatesSubject'
          other: '#/components/schemas/OtherSubject'
          sbom_reachability: '#/components/schemas/SBOMReachabilitySubject'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DeepcodeBundleSubject'
      - $ref: '#/components/schemas/DepGraphSubjectCreate'
      - $ref: '#/components/schemas/GitURLCoordinatesSubject'
      - $ref: '#/components/schemas/SBOMReachabilitySubject'
      - $ref: '#/components/schemas/OtherSubject'
    TimeoutSpec:
      description: |-
        Specification for a test timeout policy. If the test does not complete within
        the seconds specified, the test will instantly complete with the given outcome.
      properties:
        outcome:
          $ref: '#/components/schemas/PassFail'
        seconds:
          format: uint32
          type: integer
      required:
      - seconds
      - outcome
      type: object
    io.snyk.api.common.Error:
      properties:
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/io.snyk.api.common.ErrorLink'
        meta:
          type: object
        source:
          properties:
            parameter:
              type: string
            pointer:
              type: string
          type: object
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          pattern: ^[45]\d\d$
          type: string
        title:
          description: A short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization.
          type: string
      required:
      - status
      - detail
      type: object
    io.snyk.api.common.ErrorDocument:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/io.snyk.api.common.Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
      required:
      - jsonapi
      - errors
      type: object
    io.snyk.api.common.ErrorLink:
      additionalProperties:
        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
      description: A link that leads to further details about this particular occurrance
        of the problem.
      properties:
        about:
          $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
      type: object
    io.snyk.api.common.JsonApi:
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          enum:
          - "1.0"
          type: string
      required:
      - version
      type: object
    io.snyk.api.common.LinkObject:
      properties:
        href:
          $ref: '#/components/schemas/io.snyk.api.common.LinkString'
        meta:
          $ref: '#/components/schemas/io.snyk.api.common.Meta'
      required:
      - href
      type: object
    io.snyk.api.common.LinkProperty:
      oneOf:
      - $ref: '#/components/schemas/io.snyk.api.common.LinkString'
      - $ref: '#/components/schemas/io.snyk.api.common.LinkObject'
    io.snyk.api.common.LinkString:
      format: uri
      type: string
    io.snyk.api.common.Meta:
      additionalProperties: {}
      description: Free-form object that may contain non-standard information.
      type: object
    io.snyk.api.common.PaginatedLinks:
      properties:
        first:
          $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
        last:
          $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
        next:
          $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
        prev:
          $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
        self:
          $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
      type: object
    io.snyk.api.common.RelatedLink:
      properties:
        related:
          $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
      type: object
    io.snyk.api.v1testdepgraph.request.DepGraph:
      additionalProperties: {}
      properties:
        graph:
          $ref: '#/components/schemas/io.snyk.api.v1testdepgraph.request.Graph'
        pkgManager:
          $ref: '#/components/schemas/io.snyk.api.v1testdepgraph.request.PackageManager'
        pkgs:
          items:
            $ref: '#/components/schemas/io.snyk.api.v1testdepgraph.request.Package'
          type: array
        schemaVersion:
          type: string
      required:
      - schemaVersion
      - pkgManager
      - pkgs
      - graph
      type: object
    io.snyk.api.v1testdepgraph.request.Graph:
      additionalProperties: {}
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/io.snyk.api.v1testdepgraph.request.Node'
          type: array
        rootNodeId:
          type: string
      required:
      - rootNodeId
      - nodes
      type: object
    io.snyk.api.v1testdepgraph.request.Node:
      additionalProperties: {}
      properties:
        deps:
          items:
            $ref: '#/components/schemas/io.snyk.api.v1testdepgraph.request.NodeRef'
          type: array
        nodeId:
          type: string
        pkgId:
          type: string
      required:
      - nodeId
      - pkgId
      - deps
      type: object
    io.snyk.api.v1testdepgraph.request.NodeRef:
      additionalProperties: {}
      properties:
        nodeId:
          type: string
      required:
      - nodeId
      type: object
    io.snyk.api.v1testdepgraph.request.Package:
      additionalProperties: {}
      properties:
        id:
          type: string
        info:
          $ref: '#/components/schemas/io.snyk.api.v1testdepgraph.request.PackageInfo'
      required:
      - id
      - info
      type: object
    io.snyk.api.v1testdepgraph.request.PackageInfo:
      additionalProperties: {}
      properties:
        name:
          type: string
        version:
          type: string
      required:
      - name
      - version
      type: object
    io.snyk.api.v1testdepgraph.request.PackageManager:
      additionalProperties: {}
      properties:
        name:
          type: string
      required:
      - name
      type: object
    snykcoderule.Configuration:
      description: Snyk Code rule configuration options.
      properties:
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: Severity to apply when the rule matches.
      required:
      - severity
      type: object
    snykcoderule.ExampleCommitChange:
      description: |-
        Source line content, line number, and unified diff indicating the changes in
        the fix.
      properties:
        line:
          type: string
        line_change:
          type: string
        line_number:
          format: uint32
          type: integer
      required:
      - line
      - line_number
      - line_change
      type: object
    snykcoderule.ExampleCommitFix:
      description: An example of fixing this rule in a public open-source code.
      properties:
        commit_url:
          description: Commit URL identifying a specific commit within a public open-source
            SCM repo.
          type: string
        lines:
          description: Lines containing an example of the Snyk Code rule with an example
            fix.
          items:
            $ref: '#/components/schemas/snykcoderule.ExampleCommitChange'
          type: array
      required:
      - commit_url
      - lines
      type: object
    snykcoderule.MultiformatMessageString:
      description: 'Represent a message string in multiple formats: plain text or
        markdown.'
      properties:
        markdown:
          type: string
        text:
          type: string
      type: object
    snykcoderule.Properties:
      description: |-
        Additional properties of a Snyk Code rule. Represented in SARIF as free-form
        metadata, but Snyk Code scanner outputs prescribe a specific structure for
        this content.
      properties:
        categories:
          description: Categories applied to the rule.
          items:
            type: string
          type: array
        cwe:
          description: List of CWE (Common Weakness Enumeration) identifiers corresponding
            to this rule.
          items:
            type: string
          type: array
        example_commit_descriptions:
          description: Descriptions of the fix examples.
          items:
            type: string
          type: array
        example_commit_fixes:
          description: Examples of fixing this rule in public open-source code.
          items:
            $ref: '#/components/schemas/snykcoderule.ExampleCommitFix'
          type: array
        precision:
          description: A qualitative description of the rule's precision.
          example: very-high
          type: string
        repo_dataset_size:
          format: uint32
          type: integer
        tags:
          description: Tags applied to the rule.
          items:
            type: string
          type: array
      required:
      - tags
      - categories
      - example_commit_fixes
      - example_commit_descriptions
      - precision
      - repo_dataset_size
      - cwe
      type: object
    snykvulndb.BuildPackageEcosystem:
      description: |-
        Software packages supporting the application build process.

        These are generally development libraries, which may be distributed in source
        or compiled form, used during the application build process by various
        programming language toolchains.

        Examples include, but are not limited to: Javascript NPM, Java Maven, Python pip, etc.
      properties:
        language:
          type: string
        package_manager:
          type: string
        type:
          enum:
          - build
          type: string
      required:
      - type
      - language
      - package_manager
      type: object
    snykvulndb.CvssScore:
      maximum: 10
      minimum: 0
      type: number
    snykvulndb.CvssSource:
      description: CVSS vector information with provenance indicating the source of
        the scoring.
      properties:
        assigner:
          description: Entity providing the CVSS information.
          type: string
        base_score:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.CvssScore'
          description: Base CVSS score.
        cvss_version:
          description: CVSS version.
          type: string
        modified_at:
          description: When the CVSS scoring was last modified.
          format: date-time
          type: string
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: Severity based on the CVSS rating scale (see SnykVulnAttributes.severity).
        type:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.CvssSourceType'
          description: |-
            Designation of whether the CVSS score is primary (recommended assessment)
            or secondary (supplemental information).
        vector:
          description: The CVSS vector string.
          type: string
      required:
      - assigner
      - modified_at
      - severity
      - vector
      - base_score
      - cvss_version
      - type
      type: object
    snykvulndb.CvssSourceType:
      description: |-
        Indicate whether the CVSS source is primary (recommended) or secondary
        (provided as supplemental information).
      enum:
      - primary
      - secondary
      - other
      type: string
    snykvulndb.ExploitDetails:
      description: Details about the exploitability of a vulnerability.
      properties:
        maturity_levels:
          description: Exploit maturity representation in CVSS version formats.
          items:
            $ref: '#/components/schemas/snykvulndb.ExploitMaturityLevel'
          type: array
        sources:
          description: Sources of the exploitation maturity assessment.
          items:
            type: string
          type: array
      required:
      - sources
      - maturity_levels
      type: object
    snykvulndb.ExploitMaturityLevel:
      description: Represents exploit maturity.
      properties:
        format:
          description: Format of the maturity level.
          example: CVSSv4
          type: string
        level:
          description: Maturity level in the given format.
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.CvssSourceType'
          description: |-
            Designation of whether the maturity information is primary (recommended
            assessment) or secondary (supplemental information) in nature.
      required:
      - format
      - level
      - type
      type: object
    snykvulndb.OsPackageEcosystem:
      description: |-
        Software packages supporting operating system software installation and
        upgrades.

        These are generally software packages containing runtime libraries and
        applications which are installed as part of an operating system software
        distribution.
      properties:
        distribution:
          description: Distribution name providing the package.
          example: debian
          type: string
        os_name:
          description: Name of the operating system.
          example: linux
          type: string
        release:
          description: |-
            Release version of the operating system distribution.

            Note that for Linux distributions this is the release version (typically a
            semver or date-derived number), rather than the codename for the release.
          example: "12.6"
          type: string
        type:
          enum:
          - os
          type: string
      required:
      - type
      - os_name
      - distribution
      - release
      type: object
    snykvulndb.OtherPackageEcosystem:
      description: |-
        Package ecosystem which this API version is not capable of expressing.

        More information may be available in a newer version of this API.
      properties:
        type:
          enum:
          - other
          type: string
      required:
      - type
      type: object
    snykvulndb.PackageEcosystem:
      description: Describe a software package ecosystem.
      discriminator:
        mapping:
          build: '#/components/schemas/snykvulndb.BuildPackageEcosystem'
          os: '#/components/schemas/snykvulndb.OsPackageEcosystem'
          other: '#/components/schemas/snykvulndb.OtherPackageEcosystem'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/snykvulndb.BuildPackageEcosystem'
      - $ref: '#/components/schemas/snykvulndb.OsPackageEcosystem'
      - $ref: '#/components/schemas/snykvulndb.OtherPackageEcosystem'
    snykvulndb.ReferenceLinks:
      description: Represent links to external sources of vulnerability information.
      properties:
        title:
          description: User-facing title of the link.
          type: string
        url:
          description: External link where more information about the vulnerability
            can be found.
          format: uri
          type: string
      required:
      - title
      - url
      type: object
    snykvulndb.VulnerableFunction:
      description: Information about a function known to be vulnerable in a software
        package.
      properties:
        function_id:
          allOf:
          - $ref: '#/components/schemas/snykvulndb.VulnerableFunctionId'
          description: Vulnerable function.
        versions:
          description: Package versions in which the function is vulnerable.
          items:
            type: string
          type: array
      required:
      - function_id
      - versions
      type: object
    snykvulndb.VulnerableFunctionId:
      description: Identify a vulnerable function in a software package.
      properties:
        class_name:
          description: Class containing the function.
          type: string
        function_name:
          description: Vulnerable function name.
          type: string
      required:
      - function_name
      type: object
    uuid:
      format: uuid
      type: string
info:
  title: test-api-shim
  version: 3.0.0
openapi: 3.1.3
paths:
  /openapi:
    get:
      description: List available versions of OpenAPI specification
      operationId: listAPIVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List of available versions is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
      - OpenAPI
  /openapi/{version}:
    get:
      description: Get OpenAPI specification effective at version.
      operationId: getAPIVersion
      parameters:
      - description: The requested version of the API
        in: path
        name: version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OpenAPI specification matching requested version is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
      - OpenAPI
  /orgs/{org_id}/test_jobs/{job_id}:
    get:
      description: Get a test job.
      operationId: getJob
      parameters:
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
      - $ref: '#/components/parameters/OrgIdParam'
      - $ref: '#/components/parameters/JobIdParam'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/JobData'
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    additionalProperties:
                      $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    properties:
                      related:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                      self:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    type: object
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                - data
                - jsonapi
                - links
                type: object
          description: Successful API response with a single resource
          headers:
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
        "303":
          content:
            application/vnd.api+json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/JobData'
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    additionalProperties:
                      $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    properties:
                      related:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                      self:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    type: object
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                - data
                - jsonapi
                - links
                type: object
          description: Redirect to another resource after async processing.
          headers:
            deprecation:
              schema:
                type: string
            location:
              required: true
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
          description: Invalid input
          headers:
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
      summary: Get a test job.
      tags:
      - Tests
      x-cerberus:
        authorization:
          resource:
            pathId: org_id
            permissions:
            - read
            type: org
          skip: false
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/test-api-shim-core-team'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: tests
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
  /orgs/{org_id}/tests:
    post:
      description: Create a new test.
      operationId: createTest
      parameters:
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
      - $ref: '#/components/parameters/OrgIdParam'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TestRequestBody'
        required: true
      responses:
        "202":
          content:
            application/vnd.api+json:
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        $ref: '#/components/schemas/JobAttributes'
                      id:
                        format: uuid
                        type: string
                      type:
                        enum:
                        - test_jobs
                        type: string
                    required:
                    - type
                    - id
                    - attributes
                    type: object
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    additionalProperties:
                      $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    properties:
                      related:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                      self:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    type: object
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                - data
                - jsonapi
                - links
                type: object
          description: The request has been accepted for processing, but processing
            has not yet completed.
          headers:
            content-location:
              description: A pointer to the newly created Test resource
              required: true
              schema:
                format: string
                type: string
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
          description: Invalid input
          headers:
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
      summary: Create a new test.
      tags:
      - Tests
      x-cerberus:
        authorization:
          resource:
            pathId: org_id
            permissions:
            - read
            type: org
          skip: false
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/test-api-shim-core-team'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: tests
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
  /orgs/{org_id}/tests/{test_id}:
    get:
      description: Get a test.
      operationId: getTest
      parameters:
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
      - $ref: '#/components/parameters/OrgIdParam'
      - $ref: '#/components/parameters/TestIdParam'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/TestData'
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    additionalProperties:
                      $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    properties:
                      related:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                      self:
                        $ref: '#/components/schemas/io.snyk.api.common.LinkProperty'
                    type: object
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                - data
                - jsonapi
                - links
                type: object
          description: Successful API response with a single resource
          headers:
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
          description: Invalid input
          headers:
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
      summary: Get a test.
      tags:
      - Tests
      x-cerberus:
        authorization:
          resource:
            pathId: org_id
            permissions:
            - read
            type: org
          skip: false
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/test-api-shim-core-team'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: tests
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
  /orgs/{org_id}/tests/{test_id}/findings:
    get:
      description: List findings for a test.
      operationId: listFindings
      parameters:
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
      - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
      - $ref: '#/components/parameters/io.snyk.api.request.PaginatedRequest.starting_after'
      - $ref: '#/components/parameters/io.snyk.api.request.PaginatedRequest.ending_before'
      - $ref: '#/components/parameters/io.snyk.api.request.PaginatedRequest.limit'
      - $ref: '#/components/parameters/OrgIdParam'
      - $ref: '#/components/parameters/TestIdParam'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/FindingData'
                    type: array
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    $ref: '#/components/schemas/io.snyk.api.common.PaginatedLinks'
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                - data
                - jsonapi
                - links
                type: object
          description: Successful API response for a paginated collection.
          headers:
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
          description: Invalid input
          headers:
            deprecation:
              schema:
                type: string
            snyk-request-id:
              schema:
                type: string
            snyk-version-lifecycle-stage:
              schema:
                type: string
            snyk-version-requested:
              schema:
                type: string
            snyk-version-served:
              schema:
                type: string
            sunset:
              schema:
                type: string
      summary: List findings for a test.
      tags:
      - Findings
      x-cerberus:
        authorization:
          resource:
            pathId: org_id
            permissions:
            - read
            type: org
          skip: false
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/test-api-shim-core-team'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: tests
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
servers:
- description: test-api-shim
  url: /closed-beta
tags:
- description: The OpenAPI specification for test-api-shim.
  name: OpenAPI
x-cerberus:
  authentication:
    strategies:
    - InternalJWT: {}
x-snyk-api-version: "2024-10-15"
