# OpenAPI spec generated by vervet, DO NOT EDIT
components:
  headers:
    Deprecation:
      description: Deprecation date (RFC 7231)
      schema:
        type: string
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      example: "2021-07-01T00:00:00Z"
      schema:
        format: date-time
        type: string
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
      schema:
        format: uuid
        type: string
    SnykRequestId:
      description: A unique identifier for the request
      schema:
        type: string
    SnykVersionLifecycleStage:
      description: The lifecycle stage of the API version
      schema:
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
        type: string
    SnykVersionRequested:
      description: The API version requested
      schema:
        type: string
    SnykVersionServed:
      description: The API version served
      schema:
        type: string
    Sunset:
      description: Sunset date (RFC 7231)
      schema:
        type: string
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      example: "2021-08-02T00:00:00Z"
      schema:
        format: date-time
        type: string
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/QueryVersion'
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/ActualVersion'
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      schema:
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
        example: ga
        type: string
  responses:
    "400":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Bad Request: A parameter provided as a part of the request was
        invalid.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "401":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Unauthorized: the request requires an authentication token.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "404":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Not Found: The resource being operated on could not be found.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "500":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Internal Server Error: An error was encountered while attempting
        to process the request.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDocument__0'
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument__0'
      description: Error response
      headers:
        deprecation:
          $ref: '#/components/headers/Deprecation'
        snyk-request-id:
          $ref: '#/components/headers/SnykRequestId'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/SnykVersionLifecycleStage'
        snyk-version-requested:
          $ref: '#/components/headers/SnykVersionRequested'
        snyk-version-served:
          $ref: '#/components/headers/SnykVersionServed'
        sunset:
          $ref: '#/components/headers/Sunset'
  schemas:
    ActualVersion:
      description: Resolved API version
      pattern: ^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$
      type: string
    AttributeSource:
      additionalProperties: false
      description: Configuration location sources
      properties:
        asset:
          description: Asset-level configuration sources
          example:
          - asset-789
          items:
            type: string
          type: array
        group:
          description: Group-level configuration sources
          example:
          - group-123
          items:
            type: string
          type: array
        org:
          description: Organization-level configuration sources
          example:
          - org-456
          items:
            type: string
          type: array
        project_name:
          description: Project name configuration sources (used when asset is not
            set)
          example:
          - my-project
          items:
            type: string
          type: array
        remote_url:
          description: repo-level configuration sources
          example:
          - https://github.com/snyk/cli
          items:
            type: string
          type: array
        tenant:
          description: Tenant-level configuration sources
          example:
          - api.snyk.io
          items:
            type: string
          type: array
      type: object
    BinaryManagementConfig:
      properties:
        automatic_download:
          default: true
          description: Whether to automatically download CLI updates
          type: boolean
        cli_path:
          description: Path to the Snyk CLI binary
          example: /usr/local/bin/snyk
          type: string
      type: object
    CodeAction:
      additionalProperties: false
      properties:
        enabled:
          default: true
          description: Whether the code action is enabled
          type: boolean
        integration_name:
          description: Integration name for the code action
          type: string
      type: object
    CodeActions:
      additionalProperties: false
      items:
        $ref: '#/components/schemas/CodeAction'
      type: array
    ConfigAttributes:
      additionalProperties: false
      properties:
        attribute_source:
          $ref: '#/components/schemas/AttributeSource'
        config_data:
          $ref: '#/components/schemas/ConfigData'
        created_at:
          description: Timestamp when the configuration was created
          example: "2024-01-01T00:00:00Z"
          format: date-time
          type: string
        last_modified_at:
          description: Timestamp of the last configuration update
          example: "2024-01-15T10:30:00Z"
          format: date-time
          type: string
        policy:
          $ref: '#/components/schemas/Policy'
        scope:
          description: The highest scope level of the returned configuration
          enum:
          - global
          - tenant
          - group
          - org
          - asset
          - project_name
          - remote_url
          example: org
          type: string
      required:
      - last_modified_at
      - scope
      - attribute_source
      - config_data
      type: object
    ConfigData:
      additionalProperties: false
      properties:
        authentication_method:
          description: Authentication method to use
          enum:
          - oauth
          - token
          - pat
          type: string
        endpoints:
          $ref: '#/components/schemas/Endpoints'
        filter_config:
          $ref: '#/components/schemas/FilterConfig'
        folder_configs:
          $ref: '#/components/schemas/FolderConfigs'
        ide_config:
          $ref: '#/components/schemas/IdeConfig'
        organizations:
          description: |
            This list includes all organizations the user has access to.
          example:
          - asset_id: asset-123
            id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            is_default: false
            name: Primary Organization
            preferred_by_algorithm: true
            project_count: 5
            slug: primary-org
          items:
            $ref: '#/components/schemas/Organization'
          type: array
        proxy_config:
          $ref: '#/components/schemas/ProxyConfig'
      type: object
    ConfigResource:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ConfigAttributes'
        id:
          description: Unique identifier for this configuration instance
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          format: uuid
          type: string
        type:
          description: Resource type
          enum:
          - config
          example: config
          type: string
      required:
      - id
      - type
      - attributes
      type: object
    ConfigResponse:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/ConfigResource'
        jsonapi:
          additionalProperties: false
          properties:
            version:
              enum:
              - "1.0"
              example: "1.0"
              type: string
          type: object
        links:
          additionalProperties: false
          properties:
            self:
              description: Link to this resource
              example: https://api.snyk.io/rest/ldx-sync/config?org=123&asset_id=456
              format: uri
              type: string
          type: object
        meta:
          $ref: '#/components/schemas/ResponseMeta'
      required:
      - data
      type: object
    ConfigurationRequest:
      additionalProperties: false
      description: |
        Configuration request object for creating or updating configurations.
        For PATCH operations, only provided fields will be updated.
      properties:
        data:
          additionalProperties: false
          properties:
            attributes:
              additionalProperties: false
              properties:
                config_data:
                  $ref: '#/components/schemas/ConfigData'
                policy:
                  $ref: '#/components/schemas/Policy'
              type: object
            type:
              description: Resource type
              enum:
              - config
              example: config
              type: string
          required:
          - type
          - attributes
          type: object
      required:
      - data
      type: object
    Endpoints:
      properties:
        api_endpoint:
          description: Snyk API endpoint
          example: https://api.snyk.io
          format: uri
          type: string
        code_endpoint:
          description: Snyk Code API endpoint
          example: https://deeproxy.snyk.io
          format: uri
          type: string
      type: object
    Error:
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
      properties:
        code:
          description: An application-specific error code, expressed as a string value.
          example: entity-not-found
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: 'The request was missing these required fields: ...'
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/ErrorLink'
        meta:
          additionalProperties: true
          example:
            key: value
          type: object
        source:
          additionalProperties: false
          example:
            pointer: /data/attributes
          properties:
            parameter:
              description: A string indicating which URI query parameter caused the
                error.
              example: param1
              type: string
            pointer:
              description: A JSON Pointer [RFC6901] to the associated entity in the
                request document.
              example: /data/attributes
              type: string
          type: object
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          example: "400"
          pattern: ^[45]\d\d$
          type: string
        title:
          description: A short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization.
          example: Bad request
          type: string
      required:
      - status
      - detail
      type: object
    Error__0:
      additionalProperties: false
      properties:
        code:
          description: An application-specific error code
          example: INVALID_PARAMETER
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          example: The org parameter must be a valid UUID
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          format: uuid
          type: string
        links:
          additionalProperties: false
          properties:
            about:
              description: A link that leads to further details about this particular
                occurrence of the problem
              example: https://docs.snyk.io/api/errors#INVALID_PARAMETER
              format: uri
              type: string
          type: object
        meta:
          description: Additional error metadata
          type: object
        source:
          additionalProperties: false
          properties:
            parameter:
              description: A string indicating which query parameter caused the error
              example: org
              type: string
            pointer:
              description: A JSON Pointer to the value in the request that caused
                the error
              example: /data/attributes/name
              type: string
          type: object
        status:
          description: The HTTP status code applicable to this problem
          example: "400"
          type: string
        title:
          description: A short, human-readable summary of the problem
          example: Invalid Request
          type: string
      required:
      - detail
      - status
      type: object
    ErrorDocument:
      additionalProperties: false
      example:
        errors:
        - detail: Permission denied for this resource
          status: "403"
        jsonapi:
          version: "1.0"
      properties:
        errors:
          example:
          - detail: Permission denied for this resource
            status: "403"
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
      - jsonapi
      - errors
      type: object
    ErrorDocument__0:
      additionalProperties: false
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error__0'
          minItems: 1
          type: array
        jsonapi:
          additionalProperties: false
          properties:
            version:
              enum:
              - "1.0"
              example: "1.0"
              type: string
          type: object
      required:
      - errors
      type: object
    ErrorLink:
      additionalProperties: false
      description: A link that leads to further details about this particular occurrance
        of the problem.
      example:
        about: https://example.com/about_this_error
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    FilterConfig:
      properties:
        cve:
          description: CVE IDs to filter
          example:
          - CVE-2021-44228
          items:
            type: string
          type: array
        cwe:
          description: CWE IDs to filter
          example:
          - CWE-79
          - CWE-89
          items:
            type: string
          type: array
        risk_score_threshold:
          description: Minimum risk score to display
          example: 400
          maximum: 1000
          minimum: 0
          type: integer
        rule:
          description: Rule IDs to filter
          items:
            type: string
          type: array
        severities:
          properties:
            critical:
              default: true
              type: boolean
            high:
              default: true
              type: boolean
            low:
              default: true
              type: boolean
            medium:
              default: true
              type: boolean
          type: object
      type: object
    FolderConfig:
      properties:
        additional_environment:
          description: Additional environment variables
          items:
            type: string
          type: array
        additional_parameters:
          description: Additional CLI parameters
          items:
            type: string
          type: array
        folder_path:
          description: Folder path relative to remote_url
          example: src/main
          type: string
        organizations:
          description: "This list includes only organizations \nthat have access to
            the specified repository, sorted by relevance.\nThe preferred organization
            is marked with preferred_by_algorithm: true.\n"
          example:
          - asset_id: asset-123
            id: a1b2c3d4-e5f6-7890-abcd-ef1234567890
            is_default: false
            name: Primary Organization
            preferred_by_algorithm: true
            project_count: 5
            slug: primary-org
          - id: b2c3d4e5-f6a7-8901-bcde-f12345678901
            is_default: true
            name: Secondary Organization
            preferred_by_algorithm: false
            project_count: 2
            slug: secondary-org
          items:
            $ref: '#/components/schemas/Organization'
          type: array
        post_scan_execute_command:
          description: Command to execute after scanning
          example: npm run cleanup
          type: string
        pre_scan_execute_command:
          description: Command to execute before scanning
          example: npm install
          type: string
        reference_branch:
          description: Git reference branch
          example: main
          type: string
        reference_folder:
          description: Reference folder path relative to remote_url
          example: src/test
          type: string
        remote_url:
          description: |
            Repository URL
            Supports various Git URL formats including HTTPS and SSH.
          example: https://github.com/snyk/cli
          format: uri
          type: string
      required:
      - remote_url
      - folder_path
      type: object
    FolderConfigs:
      items:
        $ref: '#/components/schemas/FolderConfig'
      type: array
    IdeConfig:
      properties:
        binary_management_config:
          $ref: '#/components/schemas/BinaryManagementConfig'
        code_actions:
          properties:
            open_browser:
              $ref: '#/components/schemas/CodeActions'
            open_learn_lesson:
              $ref: '#/components/schemas/CodeActions'
            sca_upgrade:
              $ref: '#/components/schemas/CodeActions'
          type: object
        hover_verbosity:
          default: 1
          description: Verbosity level for hover information
          maximum: 3
          minimum: 0
          type: integer
        issue_view_config:
          $ref: '#/components/schemas/IssueViewConfig'
        product_config:
          $ref: '#/components/schemas/ProductConfig'
        scan_config:
          $ref: '#/components/schemas/ScanConfig'
        trust_config:
          $ref: '#/components/schemas/TrustConfig'
      type: object
    IssueViewConfig:
      additionalProperties: false
      properties:
        ignored_issues:
          default: false
          description: Show ignored issues
          type: boolean
        open_issues:
          default: true
          description: Show open issues
          type: boolean
      type: object
    JsonApi:
      additionalProperties: false
      example:
        version: "1.0"
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          example: "1.0"
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)$
          type: string
      required:
      - version
      type: object
    LinkProperty:
      example: https://example.com/api/resource
      oneOf:
      - description: A string containing the link’s URL.
        example: https://example.com/api/resource
        type: string
      - additionalProperties: false
        example:
          href: https://example.com/api/resource
        properties:
          href:
            description: A string containing the link’s URL.
            example: https://example.com/api/resource
            type: string
          meta:
            $ref: '#/components/schemas/Meta'
        required:
        - href
        type: object
    Meta:
      additionalProperties: true
      description: Free-form object that may contain non-standard information.
      example:
        key1: value1
        key2:
          sub_key: sub_value
        key3:
        - array_value1
        - array_value2
      type: object
    Organization:
      properties:
        id:
          description: Organization UUID
          example: a1b2c3d4-e5f6-7890-abcd-ef1234567890
          type: string
        is_default:
          default: false
          description: Whether this is the user's default organization
          type: boolean
        name:
          description: Organization display name
          example: My Organization
          type: string
        preferred_by_algorithm:
          default: false
          description: |
            Whether this organization is preferred by the automatic selection algorithm.
            When remote_url is provided, the algorithm selects organizations based on:
            - Access to the repository
            - Number of projects/assets associated with the repository
            - User's default organization preference
          type: boolean
        project_count:
          description: Number of projects this organization has for the provided remote_url
          example: 5
          type: integer
        slug:
          description: Organization slug (URL-friendly identifier)
          example: my-org
          type: string
      required:
      - id
      - name
      - slug
      type: object
    Policy:
      additionalProperties: false
      properties:
        enforced_attributes:
          description: Attributes that will override local settings (but may be allowed
            to edit)
          example:
          - filter_config.severities.critical
          - product_config.oss
          items:
            type: string
          type: array
        locked_attributes:
          description: List of attributes that cannot be overridden locally
          example:
          - proxy_config.http
          - scan_config.automatic
          items:
            type: string
          type: array
      type: object
    ProductConfig:
      additionalProperties: false
      properties:
        code:
          default: true
          description: Enable Code (SAST) scanning
          type: boolean
        container:
          default: true
          description: Enable Container scanning
          type: boolean
        iac:
          default: true
          description: Enable Infrastructure as Code scanning
          type: boolean
        oss:
          default: true
          description: Enable Open Source Software scanning
          type: boolean
      type: object
    ProxyConfig:
      properties:
        http:
          description: HTTP proxy URL
          example: http://proxy.company.com:8080
          type: string
        https:
          description: HTTPS proxy URL
          example: https://proxy.company.com:8443
          type: string
        insecure:
          default: false
          description: Whether to skip SSL certificate validation
          type: boolean
        no_proxy:
          description: Comma-separated list of hosts to bypass proxy
          example: localhost,127.0.0.1,.company.internal
          type: string
      type: object
    QueryVersion:
      description: Requested API version
      pattern: ^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$
      type: string
    ResponseMeta:
      additionalProperties: false
      properties:
        request_time:
          description: Time when the request was processed
          example: "2024-01-15T10:30:00Z"
          format: date-time
          type: string
      type: object
    ScanConfig:
      properties:
        automatic:
          default: true
          description: Enable automatic scanning
          type: boolean
        net_new:
          default: false
          description: Only scan net-new issues
          type: boolean
      type: object
    TrustConfig:
      properties:
        enable:
          default: false
          description: Enable trust configuration
          type: boolean
        trusted_folders:
          description: List of trusted folder paths (relative to target)
          example:
          - src
          - lib
          - test
          items:
            type: string
          type: array
      type: object
info:
  title: ldx-sync
  version: 3.0.0
openapi: 3.0.3
paths:
  /ldx_sync/config:
    delete:
      description: |
        Delete the configuration at the specified scope level.
        After deletion, the scope will inherit configuration from higher scopes.
        The scope is determined by the provided query parameters.
      operationId: deleteConfig
      parameters:
      - description: API version in format YYYY-MM-DD
        in: query
        name: version
        required: true
        schema:
          example: "2024-10-15"
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
      - description: Endpoint address for tenant scope
        in: query
        name: tenant
        schema:
          example: api.snyk.io
          type: string
      - description: Group identifier
        in: query
        name: group
        schema:
          example: snyk
          type: string
      - description: Organization ID
        in: query
        name: org
        schema:
          example: "123"
          type: string
      - description: Asset identifier
        in: query
        name: asset_id
        schema:
          example: "123"
          type: string
      - description: Project name (alternative to asset_id when asset is not set)
        in: query
        name: project_name
        schema:
          example: cli
          type: string
      - description: Repository URL
        in: query
        name: remote_url
        schema:
          example: https://github.com/snyk/cli
          format: uri
          type: string
      responses:
        "204":
          description: Configuration deleted successfully
          headers:
            deprecation:
              $ref: '#/components/headers/Deprecation'
            snyk-request-id:
              $ref: '#/components/headers/SnykRequestId'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/SnykVersionLifecycleStage'
            snyk-version-requested:
              $ref: '#/components/headers/SnykVersionRequested'
            snyk-version-served:
              $ref: '#/components/headers/SnykVersionServed'
            sunset:
              $ref: '#/components/headers/Sunset'
        "401":
          $ref: '#/components/responses/ErrorResponse'
        "404":
          $ref: '#/components/responses/ErrorResponse'
        "500":
          $ref: '#/components/responses/ErrorResponse'
      summary: Delete configuration
      tags:
      - Configuration
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/ide'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: config
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
    get:
      description: |
        Retrieve configuration based on various scopes. The service will merge configurations
        from different levels (tenant, group, org, asset) based on the provided parameters.

        ## Automatic Organization Selection
        When the `remote_url` parameter is provided:
        - The service will identify all organizations that have access to the specified repository
        - Organizations are sorted by relevance (number of projects, user preferences)
        - The most relevant organization is marked with `preferred_by_algorithm: true`
        - Only organizations with repository access are included in the response

        ## Configuration Merging
        Configurations are merged in the following order (later scopes override earlier ones):
        1. Global defaults
        2. Tenant-level configuration
        3. Group-level configuration
        4. Organization-level configuration
        5. Asset or project-level configuration
      operationId: getConfig
      parameters:
      - description: API version in format YYYY-MM-DD
        in: query
        name: version
        required: true
        schema:
          example: "2025-07-29"
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
      - description: Organization ID
        in: query
        name: org
        schema:
          example: "123"
          type: string
      - description: Asset identifier
        in: query
        name: asset_id
        schema:
          example: "123"
          type: string
      - description: Project name (alternative to asset_id when asset is not set)
        in: query
        name: project_name
        schema:
          example: cli
          type: string
      - description: "Repository URL for automatic organization selection. \nWhen
          provided, the service will attempt to find organizations that have access
          to this repository.\nSupports various Git URL formats including HTTPS and
          SSH.\n"
        examples:
          https:
            summary: HTTPS URL
            value: https://github.com/snyk/cli
          https_with_git:
            summary: HTTPS URL with .git extension
            value: https://github.com/snyk/cli.git
          ssh:
            summary: SSH URL
            value: git@github.com:snyk/cli.git
        in: query
        name: remote_url
        schema:
          example: https://github.com/snyk/cli
          format: uri
          type: string
      - description: Group identifier
        in: query
        name: group
        schema:
          example: snyk
          type: string
      - description: Endpoint address
        in: query
        name: tenant
        schema:
          example: api.snyk.io
          type: string
      - description: Name of the integration (e.g., VSCODE, INTELLIJ)
        in: query
        name: integration_name
        schema:
          example: VSCODE
          type: string
      - description: Version of the integration
        in: query
        name: integration_version
        schema:
          example: 1.0.0
          type: string
      - description: Integration environment (e.g., platform)
        in: query
        name: integration_environment
        schema:
          example: darwin
          type: string
      - description: Version of the integration environment
        in: query
        name: integration_environment_version
        schema:
          example: 14.0.0
          type: string
      - description: Return results starting after this cursor
        in: query
        name: starting_after
        schema:
          type: string
      - description: Return results ending before this cursor
        in: query
        name: ending_before
        schema:
          type: string
      - description: Maximum number of results to return
        in: query
        name: limit
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: Configuration retrieved successfully
          headers:
            deprecation:
              $ref: '#/components/headers/Deprecation'
            snyk-request-id:
              $ref: '#/components/headers/SnykRequestId'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/SnykVersionLifecycleStage'
            snyk-version-requested:
              $ref: '#/components/headers/SnykVersionRequested'
            snyk-version-served:
              $ref: '#/components/headers/SnykVersionServed'
            sunset:
              $ref: '#/components/headers/Sunset'
        "400":
          $ref: '#/components/responses/ErrorResponse'
        "401":
          $ref: '#/components/responses/ErrorResponse'
        "404":
          $ref: '#/components/responses/ErrorResponse'
        "500":
          $ref: '#/components/responses/ErrorResponse'
      summary: Get configuration with automatic organization selection
      tags:
      - Configuration
      x-cerberus:
        authorization:
          reason: org-scoped authorization is not sufficient here.
          skip: true
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/ide'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: config
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
    patch:
      description: |
        Update an existing configuration at the specified scope level.
        Only provided fields will be updated (partial update).
        The scope is determined by the provided query parameters.
      operationId: updateConfig
      parameters:
      - description: API version in format YYYY-MM-DD
        in: query
        name: version
        required: true
        schema:
          example: "2024-10-15"
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
      - description: Endpoint address for tenant scope
        in: query
        name: tenant
        schema:
          example: api.snyk.io
          type: string
      - description: Group identifier
        in: query
        name: group
        schema:
          example: snyk
          type: string
      - description: Organization ID
        in: query
        name: org
        schema:
          example: "123"
          type: string
      - description: Asset identifier
        in: query
        name: asset_id
        schema:
          example: "123"
          type: string
      - description: Project name (alternative to asset_id when asset is not set)
        in: query
        name: project_name
        schema:
          example: cli
          type: string
      - description: Repository URL
        in: query
        name: remote_url
        schema:
          example: https://github.com/snyk/cli
          format: uri
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: Configuration updated successfully
          headers:
            deprecation:
              $ref: '#/components/headers/Deprecation'
            snyk-request-id:
              $ref: '#/components/headers/SnykRequestId'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/SnykVersionLifecycleStage'
            snyk-version-requested:
              $ref: '#/components/headers/SnykVersionRequested'
            snyk-version-served:
              $ref: '#/components/headers/SnykVersionServed'
            sunset:
              $ref: '#/components/headers/Sunset'
        "400":
          $ref: '#/components/responses/ErrorResponse'
        "401":
          $ref: '#/components/responses/ErrorResponse'
        "404":
          $ref: '#/components/responses/ErrorResponse'
        "500":
          $ref: '#/components/responses/ErrorResponse'
      summary: Update configuration
      tags:
      - Configuration
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/ide'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: config
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
    post:
      description: "Create a new configuration at the specified scope level. \nThe
        scope is determined by the provided query parameters.\n"
      operationId: createConfig
      parameters:
      - description: API version in format YYYY-MM-DD
        in: query
        name: version
        required: true
        schema:
          example: "2024-10-15"
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
      - description: Endpoint address for tenant scope
        in: query
        name: tenant
        schema:
          example: api.snyk.io
          type: string
      - description: Group identifier
        in: query
        name: group
        schema:
          example: snyk
          type: string
      - description: Organization ID
        in: query
        name: org
        schema:
          example: "123"
          type: string
      - description: Asset identifier
        in: query
        name: asset_id
        schema:
          example: "123"
          type: string
      - description: Project name (alternative to asset_id when asset is not set)
        in: query
        name: project_name
        schema:
          example: cli
          type: string
      - description: Repository URL
        in: query
        name: remote_url
        schema:
          example: https://github.com/snyk/cli
          format: uri
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: Configuration created successfully
          headers:
            deprecation:
              $ref: '#/components/headers/Deprecation'
            location:
              description: Location of the created resource
              schema:
                example: https://api.snyk.io/rest/ldx-sync/config?org=d67ab91e-2549-4d6f-b3c4-033bb98e8e98
                format: uri
                type: string
            snyk-request-id:
              $ref: '#/components/headers/SnykRequestId'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/SnykVersionLifecycleStage'
            snyk-version-requested:
              $ref: '#/components/headers/SnykVersionRequested'
            snyk-version-served:
              $ref: '#/components/headers/SnykVersionServed'
            sunset:
              $ref: '#/components/headers/Sunset'
        "400":
          $ref: '#/components/responses/ErrorResponse'
        "401":
          $ref: '#/components/responses/ErrorResponse'
        "409":
          $ref: '#/components/responses/ErrorResponse'
        "500":
          $ref: '#/components/responses/ErrorResponse'
      summary: Create configuration
      tags:
      - Configuration
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
      - '@snyk/ide'
      x-snyk-api-releases:
      - 2024-10-15~beta
      x-snyk-api-resource: config
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-15~beta
      x-stability-level: beta
  /openapi:
    get:
      description: List available versions of OpenAPI specification
      operationId: listAPIVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List of available versions is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
      - OpenAPI
  /openapi/{version}:
    get:
      description: Get OpenAPI specification effective at version.
      operationId: getAPIVersion
      parameters:
      - description: The requested version of the API
        in: path
        name: version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OpenAPI specification matching requested version is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
      - OpenAPI
servers:
- description: ldx-sync
  url: /rest
tags:
- description: The OpenAPI specification for ldx-sync.
  name: OpenAPI
x-cerberus:
  authentication:
    strategies:
    - InternalJWT: {}
x-snyk-api-version: "2024-10-15"
