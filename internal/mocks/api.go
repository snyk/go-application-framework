// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockApiClient is a mock of ApiClient interface.
type MockApiClient struct {
	ctrl     *gomock.Controller
	recorder *MockApiClientMockRecorder
}

// MockApiClientMockRecorder is the mock recorder for MockApiClient.
type MockApiClientMockRecorder struct {
	mock *MockApiClient
}

// NewMockApiClient creates a new mock instance.
func NewMockApiClient(ctrl *gomock.Controller) *MockApiClient {
	mock := &MockApiClient{ctrl: ctrl}
	mock.recorder = &MockApiClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiClient) EXPECT() *MockApiClientMockRecorder {
	return m.recorder
}

// GetDefaultOrgId mocks base method.
func (m *MockApiClient) GetDefaultOrgId() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultOrgId")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultOrgId indicates an expected call of GetDefaultOrgId.
func (mr *MockApiClientMockRecorder) GetDefaultOrgId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultOrgId", reflect.TypeOf((*MockApiClient)(nil).GetDefaultOrgId))
}

// GetOrgIdFromSlug mocks base method.
func (m *MockApiClient) GetOrgIdFromSlug(slugName string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgIdFromSlug", slugName)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgIdFromSlug indicates an expected call of GetOrgIdFromSlug.
func (mr *MockApiClientMockRecorder) GetOrgIdFromSlug(slugName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgIdFromSlug", reflect.TypeOf((*MockApiClient)(nil).GetOrgIdFromSlug), slugName)
}

// SetClient mocks base method.
func (m *MockApiClient) SetClient(client *http.Client) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetClient", client)
}

// SetClient indicates an expected call of SetClient.
func (mr *MockApiClientMockRecorder) SetClient(client interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetClient", reflect.TypeOf((*MockApiClient)(nil).SetClient), client)
}

// SetUrl mocks base method.
func (m *MockApiClient) SetUrl(url string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetUrl", url)
}

// SetUrl indicates an expected call of SetUrl.
func (mr *MockApiClientMockRecorder) SetUrl(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUrl", reflect.TypeOf((*MockApiClient)(nil).SetUrl), url)
}
