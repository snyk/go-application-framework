// Code generated by MockGen. DO NOT EDIT.
// Source: os.go

// Package mocks is a generated GoMock package.
package mocks

import (
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSnykOSUtil is a mock of SnykOSUtil interface.
type MockSnykOSUtil struct {
	ctrl     *gomock.Controller
	recorder *MockSnykOSUtilMockRecorder
}

// MockSnykOSUtilMockRecorder is the mock recorder for MockSnykOSUtil.
type MockSnykOSUtilMockRecorder struct {
	mock *MockSnykOSUtil
}

// NewMockSnykOSUtil creates a new mock instance.
func NewMockSnykOSUtil(ctrl *gomock.Controller) *MockSnykOSUtil {
	mock := &MockSnykOSUtil{ctrl: ctrl}
	mock.recorder = &MockSnykOSUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSnykOSUtil) EXPECT() *MockSnykOSUtilMockRecorder {
	return m.recorder
}

// MkdirAll mocks base method.
func (m *MockSnykOSUtil) MkdirAll(path string, perm os.FileMode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MkdirAll", path, perm)
	ret0, _ := ret[0].(error)
	return ret0
}

// MkdirAll indicates an expected call of MkdirAll.
func (mr *MockSnykOSUtilMockRecorder) MkdirAll(path, perm interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MkdirAll", reflect.TypeOf((*MockSnykOSUtil)(nil).MkdirAll), path, perm)
}

// Stat mocks base method.
func (m *MockSnykOSUtil) Stat(name string) (os.FileInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stat", name)
	ret0, _ := ret[0].(os.FileInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Stat indicates an expected call of Stat.
func (mr *MockSnykOSUtilMockRecorder) Stat(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stat", reflect.TypeOf((*MockSnykOSUtil)(nil).Stat), name)
}

// TempDir mocks base method.
func (m *MockSnykOSUtil) TempDir() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TempDir")
	ret0, _ := ret[0].(string)
	return ret0
}

// TempDir indicates an expected call of TempDir.
func (mr *MockSnykOSUtilMockRecorder) TempDir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TempDir", reflect.TypeOf((*MockSnykOSUtil)(nil).TempDir))
}

// UserCacheDir mocks base method.
func (m *MockSnykOSUtil) UserCacheDir() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserCacheDir")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserCacheDir indicates an expected call of UserCacheDir.
func (mr *MockSnykOSUtilMockRecorder) UserCacheDir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserCacheDir", reflect.TypeOf((*MockSnykOSUtil)(nil).UserCacheDir))
}
