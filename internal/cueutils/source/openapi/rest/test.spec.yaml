openapi: 3.0.0
info:
  title: Snyk Test API
  version: 2024-08-06
  description: |-
    The Snyk Test API to run, re-run, list, fetch, or cancel any supported test
    at Snyk.
tags:
  - name: Test
  - name: Findings
paths:
  /orgs/{org_id}/tests:
    post:
      operationId: createTest
      summary: Create a new test.
      description: 'Create a new test, with a URL pointer to poll for the Test entity. The API follow Async API conventions: https://snyksec.atlassian.net/wiki/spaces/API/pages/2258796595/Async+APIs'
      parameters:
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
        - $ref: '#/components/parameters/types.OrgIdParam'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            content-location:
              required: true
              description: A pointer to the newly created Test resource
              schema:
                type: string
                format: string
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tests
                      id:
                        type: string
                        format: uuid
                      attributes:
                        type: object
                        properties:
                          state:
                            $ref: '#/components/schemas/types.TestState'
                        required:
                          - state
                    required:
                      - type
                      - id
                      - attributes
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/LinkProperty'
                      related:
                        $ref: '#/components/schemas/LinkProperty'
                    additionalProperties:
                      $ref: '#/components/schemas/LinkProperty'
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                  - data
                  - jsonapi
                  - links
        '400':
          description: Invalid input
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
        '422':
          description: Validation exception
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
      tags:
        - Test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/types.CreateTestAttributes'
  /orgs/{org_id}/tests/{test_id}:
    get:
      operationId: getTest
      summary: Get the given test by id.
      description: Get a single test by its id.
      parameters:
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
        - $ref: '#/components/parameters/types.OrgIdParam'
        - $ref: '#/components/parameters/types.TestIdParam'
      responses:
        '200':
          description: The request has succeeded.
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
            retry-after:
              required: false
              schema:
                type: integer
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/types.TestResource'
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/LinkProperty'
                      related:
                        $ref: '#/components/schemas/LinkProperty'
                    additionalProperties:
                      $ref: '#/components/schemas/LinkProperty'
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                  - data
                  - jsonapi
                  - links
        '404':
          description: Resource not found
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
      tags:
        - Test
  /orgs/{org_id}/tests/{test_id}/findings:
    get:
      operationId: listFindings
      summary: List the findings for a completed test.
      description: List the findings for a completed test.
      parameters:
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
        - $ref: '#/components/parameters/io.snyk.api.request.PaginatedRequest.starting_after'
        - $ref: '#/components/parameters/io.snyk.api.request.PaginatedRequest.ending_before'
        - $ref: '#/components/parameters/io.snyk.api.request.PaginatedRequest.limit'
        - $ref: '#/components/parameters/types.OrgIdParam'
        - $ref: '#/components/parameters/types.TestIdParam'
      responses:
        '200':
          description: Successful API response for a paginated collection.
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/types.FindingResource'
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    $ref: '#/components/schemas/io.snyk.api.common.PaginatedLinks'
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                  - data
                  - jsonapi
                  - links
        '404':
          description: Resource not found
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
      tags:
        - Findings
  /orgs/{org_id}/tests/{test_id}/rules:
    get:
      operationId: getRules
      summary: Get all rules
      description: Get Rules
      parameters:
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.requestId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.interactionId'
        - $ref: '#/components/parameters/io.snyk.api.request.SnykApiRequest.version'
        - $ref: '#/components/parameters/types.OrgIdParam'
        - $ref: '#/components/parameters/types.TestIdParam'
      responses:
        '200':
          description: The request has succeeded.
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
            retry-after:
              required: false
              schema:
                type: integer
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/types.Rules'
                  jsonapi:
                    $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/LinkProperty'
                      related:
                        $ref: '#/components/schemas/LinkProperty'
                    additionalProperties:
                      $ref: '#/components/schemas/LinkProperty'
                  meta:
                    $ref: '#/components/schemas/io.snyk.api.common.Meta'
                required:
                  - data
                  - jsonapi
                  - links
        '404':
          description: Resource not found
          headers:
            sunset:
              required: true
              schema:
                type: string
            deprecation:
              required: true
              schema:
                type: string
            snyk-version-requested:
              required: true
              schema:
                type: string
            snyk-version-served:
              required: true
              schema:
                type: string
            snyk-request-id:
              required: true
              schema:
                type: string
            snyk-version-lifecycle-stage:
              required: true
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/io.snyk.api.common.ErrorDocument'
      tags:
        - Test
components:
  parameters:
    io.snyk.api.request.PaginatedRequest.ending_before:
      name: ending_before
      in: query
      required: false
      description: Opaque pagination cursor for reverse traversal.
      schema:
        type: string
    io.snyk.api.request.PaginatedRequest.limit:
      name: limit
      in: query
      required: false
      description: The number of items to return.
      schema:
        type: integer
        format: int8
        minimum: 1
        maximum: 100
        default: 10
    io.snyk.api.request.PaginatedRequest.starting_after:
      name: starting_after
      in: query
      required: false
      description: Opaque pagination cursor for forward traversal.
      schema:
        type: string
    io.snyk.api.request.SnykApiRequest.interactionId:
      name: snyk-interaction-id
      in: header
      required: false
      description: |-
        Identifies the Snyk client interaction in which this API request occurs.

        The identifier is an opaque string. though at the time of writing it may either be a
        uuid or a urn containing a uuid and some metadata.
        to be safe, the
      schema:
        type: string
        minLength: 36
        maxLength: 128
    io.snyk.api.request.SnykApiRequest.requestId:
      name: snyk-request-id
      in: header
      required: false
      description: |-
        A unique ID assigned to each API request, for tracing and troubleshooting.

        Snyk clients can optionally provide this ID.
      schema:
        type: string
        format: uuid
    io.snyk.api.request.SnykApiRequest.version:
      name: version
      in: query
      required: true
      description: The API version requested.
      schema:
        type: string
    types.OrgIdParam:
      name: org_id
      in: path
      required: true
      description: The org id
      schema:
        type: string
        format: uuid
    types.TestIdParam:
      name: test_id
      in: path
      required: true
      description: The test id
      schema:
        type: string
        format: uuid
  schemas:
    ContentAddress:
      oneOf:
        - $ref: '#/components/schemas/types.LegacyDeepcodeBundleAddress'
        - $ref: '#/components/schemas/types.WorkspaceV1Address'
      discriminator:
        propertyName: scheme
        mapping:
          deepcode-bundle: '#/components/schemas/types.LegacyDeepcodeBundleAddress'
          workspace-v1: '#/components/schemas/types.WorkspaceV1Address'
      description: Content address whence source code can be obtained for scanning.
    CreateExcludeRule:
      oneOf:
        - type: string
        - $ref: '#/components/schemas/CreateObjectExcludeRule'
      description: |-
        CreateExcludeRule defines individual rules for exclusion of files during a test.
        Currently it supports either bare strings as recursive globs, or explicitly
        stated file patterns as recursive globs.
    CreateObjectExcludeRule:
      $ref: '#/components/schemas/types.FileObjectExcludeRule'
    ExcludeRule:
      oneOf:
        - type: string
        - $ref: '#/components/schemas/ObjectExcludeRule'
      description: |-
        ExcludeRule defines individual rules for exclusion of files during a test.
        Currently it supports either bare strings as recursive globs, or explicitly
        stated file patterns as recursive globs.
    Fingerprint:
      oneOf:
        - $ref: '#/components/schemas/types.CodeSastFingerprintV0'
        - $ref: '#/components/schemas/types.CodeSastFingerprintV1'
        - $ref: '#/components/schemas/types.ScaProblemFingerprint'
        - $ref: '#/components/schemas/types.IdentityFingerprint'
      discriminator:
        propertyName: scheme
        mapping:
          code-sast-v0: '#/components/schemas/types.CodeSastFingerprintV0'
          code-sast-v1: '#/components/schemas/types.CodeSastFingerprintV1'
          sca-problem: '#/components/schemas/types.ScaProblemFingerprint'
          identity: '#/components/schemas/types.IdentityFingerprint'
    LinkProperty:
      oneOf:
        - $ref: '#/components/schemas/io.snyk.api.common.LinkString'
        - $ref: '#/components/schemas/io.snyk.api.common.LinkObject'
    ObjectExcludeRule:
      oneOf:
        - $ref: '#/components/schemas/types.FileObjectExcludeRule'
        - $ref: '#/components/schemas/types.OtherObjectExcludeRule'
      discriminator:
        propertyName: type
        mapping:
          file: '#/components/schemas/types.FileObjectExcludeRule'
          other: '#/components/schemas/types.OtherObjectExcludeRule'
    Package:
      anyOf:
        - $ref: '#/components/schemas/types.PackageURL'
        - $ref: '#/components/schemas/types.PackageObject'
      description: |-
        A Package is either a Package URL (pURL) or a decomposed PackageObject
        identifying a software package.

        See https://github.com/package-url/purl-spec for more information about
        pURLs.
    RiskFactors:
      oneOf:
        - $ref: '#/components/schemas/types.BusinessCriticalityRiskFactor'
        - $ref: '#/components/schemas/types.CvssRiskFactor'
        - $ref: '#/components/schemas/types.EpssRiskFactor'
        - $ref: '#/components/schemas/types.VulnerabilityFactRiskFactor'
        - $ref: '#/components/schemas/types.VulnerabilityInstanceFactRiskFactor'
        - $ref: '#/components/schemas/types.VulnerabilityGenericFactor'
      discriminator:
        propertyName: factor
        mapping:
          business-criticality: '#/components/schemas/types.BusinessCriticalityRiskFactor'
          cvss: '#/components/schemas/types.CvssRiskFactor'
          epss: '#/components/schemas/types.EpssRiskFactor'
          vulnerability-fact: '#/components/schemas/types.VulnerabilityFactRiskFactor'
          vulnerability-instance-fact: '#/components/schemas/types.VulnerabilityInstanceFactRiskFactor'
          vulnerability-generic-fact: '#/components/schemas/types.VulnerabilityGenericFactor'
    Suggestion:
      oneOf:
        - $ref: '#/components/schemas/types.SuggestedPackageUpgrade'
        - $ref: '#/components/schemas/types.SuggestedOther'
      discriminator:
        propertyName: type
        mapping:
          package-upgrade: '#/components/schemas/types.SuggestedPackageUpgrade'
          other: '#/components/schemas/types.SuggestedOther'
      description: |-
        Suggestions are indications given to the user that might help with
        mitigating the finding.
    TestInput:
      oneOf:
        - $ref: '#/components/schemas/types.GitSCMInput'
        - $ref: '#/components/schemas/types.ContentAddressInput'
      discriminator:
        propertyName: type
        mapping:
          git-scm: '#/components/schemas/types.GitSCMInput'
          content-address: '#/components/schemas/types.ContentAddressInput'
      description: |-
        TestInput defines what will be tested.

        Another term for this might be "test coordinates".
    io.snyk.api.common.Error:
      type: object
      required:
        - status
        - detail
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier for this particular occurrence of the problem.
        links:
          $ref: '#/components/schemas/io.snyk.api.common.ErrorLink'
        status:
          type: string
          pattern: ^[45]\\d\\d$
          description: The HTTP status code applicable to this problem, expressed as a string value.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        code:
          type: string
          description: An application-specific error code, expressed as a string value.
        title:
          type: string
          description: A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.
        source:
          type: object
          properties:
            pointer:
              type: string
            parameter:
              type: string
        meta:
          type: object
    io.snyk.api.common.ErrorDocument:
      type: object
      required:
        - jsonapi
        - errors
      properties:
        jsonapi:
          $ref: '#/components/schemas/io.snyk.api.common.JsonApi'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/io.snyk.api.common.Error'
          minItems: 1
    io.snyk.api.common.ErrorLink:
      type: object
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      additionalProperties:
        $ref: '#/components/schemas/LinkProperty'
      description: A link that leads to further details about this particular occurrance of the problem.
    io.snyk.api.common.JsonApi:
      type: object
      required:
        - version
      properties:
        version:
          type: string
          enum:
            - '1.0'
          description: Version of the JSON API specification this server supports.
    io.snyk.api.common.LinkObject:
      type: object
      required:
        - href
      properties:
        href:
          $ref: '#/components/schemas/io.snyk.api.common.LinkString'
        meta:
          $ref: '#/components/schemas/io.snyk.api.common.Meta'
    io.snyk.api.common.LinkString:
      type: string
      format: uri
    io.snyk.api.common.Meta:
      type: object
      additionalProperties: {}
      description: Free-form object that may contain non-standard information.
    io.snyk.api.common.PaginatedLinks:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
    io.snyk.api.common.RelatedLink:
      type: object
      properties:
        related:
          $ref: '#/components/schemas/LinkProperty'
    io.snyk.reactive.FindingLocation:
      type: object
      properties:
        source_locations:
          $ref: '#/components/schemas/io.snyk.reactive.FindingSourceLocation'
        dependency_path:
          type: array
          items:
            $ref: '#/components/schemas/io.snyk.reactive.ScaPackage'
    io.snyk.reactive.FindingSourceLocation:
      type: object
      required:
        - filepath
        - original_start_line
        - original_start_column
        - original_end_line
        - original_end_column
      properties:
        filepath:
          type: string
          description: Maps `sarif.Runs.Results.Location.PhysicalLocation.ArtifactLocation.URI`
        original_start_line:
          type: integer
          description: Maps `sarif.Runs.Results.Location.PhysicalLocation.Region.StartLine`
        original_start_column:
          type: integer
          description: Maps `sarif.Runs.Results.Location.PhysicalLocation.Region.StartColumn`
        original_end_line:
          type: integer
          description: Maps `sarif.Runs.Results.Location.PhysicalLocation.Region.EndLine`
        original_end_column:
          type: integer
          description: Maps `sarif.Runs.Results.Location.PhysicalLocation.Region.EndColumn`
      description: Original locations are necessary for "existing" and "removed" findings. Locations should be available for all scan types where possible.
    io.snyk.reactive.ScaPackage:
      type: object
      required:
        - package_name
        - package_version
      properties:
        package_name:
          type: string
        package_version:
          type: string
    types.BusinessCriticalityRiskFactor:
      type: object
      required:
        - factor
        - value
      properties:
        factor:
          type: string
          enum:
            - business-criticality
        value:
          type: string
          enum:
            - low
            - medium
            - high
    types.CodeFlow:
      type: object
      required:
        - threadFlows
      properties:
        threadFlows:
          type: array
          items:
            $ref: '#/components/schemas/types.ThreadFlow'
    types.CodeSastFingerprintV0:
      type: object
      required:
        - scheme
        - value
      properties:
        scheme:
          type: string
          enum:
            - code-sast-v0
        value:
          type: string
    types.CodeSastFingerprintV1:
      type: object
      required:
        - scheme
        - value
      properties:
        scheme:
          type: string
          enum:
            - code-sast-v1
        value:
          type: string
    types.Component:
      type: object
      required:
        - name
        - scan_type
      properties:
        name:
          type: string
          example: MyJavaProject
          description: |-
            Name of the component. Names are free-form and semantically meaningful in the context of
            what is being scanned, and how it is being scanned. It may or may not be a file name or path,
            depending on what is scanned.
        scan_type:
          allOf:
            - $ref: '#/components/schemas/types.ScanType'
          description: Scan type of the component.
      example:
        name: image:docker.io/library/postgres:16
        scan_type: sca
      description: A Component (as in, software component) is the subject of a security scan.
    types.ContentAddressInput:
      type: object
      required:
        - type
        - spec
      properties:
        type:
          type: string
          enum:
            - content-address
        spec:
          $ref: '#/components/schemas/types.ContentAddressSpec'
      description: Test input obtained from a source code image, addressed by its content digest.
    types.ContentAddressSpec:
      type: object
      required:
        - target
      properties:
        target:
          allOf:
            - $ref: '#/components/schemas/ContentAddress'
          description: Target content to be scanned for this security test.
        base:
          allOf:
            - $ref: '#/components/schemas/ContentAddress'
          description: |-
            Base content for a differential test. When provided,
            FindingAttributes.delta will be set with respect to the base in results.

            Otherwise FindingAttributes.delta is left unset.
      description: |-
        Content address specification, which defines the target address to test, or a
        pair of addresses to test for a differential test.
    types.Coverage:
      type: object
      required:
        - files
        - isSupported
        - lang
        - type
      properties:
        files:
          type: integer
        isSupported:
          type: boolean
        lang:
          type: string
        type:
          type: string
      description: Coverage statistics about a Test's Findings.
    types.CreateTestAttributes:
      type: object
      required:
        - input
      properties:
        input:
          allOf:
            - $ref: '#/components/schemas/TestInput'
          description: Test inputs; what will be tested.
        context:
          allOf:
            - $ref: '#/components/schemas/types.CreateTestContext'
          description: |-
            Test context; pertinent information important to associate with the outcome
            of the test and its further processing, but is not directly used in the
            test.

            These are worth modeling with a concrete type, rather than as generic
            free-form metadata to communicate to consumers of the test what values are
            available.
        options:
          allOf:
            - $ref: '#/components/schemas/types.CreateTestOptions'
          description: |-
            CreateTestOptions are arguments which configure the test and determine the
            behavior of how it is conducted.

            Options are optional when creating a test and may be derived from other
            sources, such as a test configuration policy if not specified. Provided
            options may be merged with or overridden by such policy.

            In the requested Test resource, these options will reflect the effective
            options resolved and applied to the execution of the test.
      description: Attributes provided when creating a new test.
    types.CreateTestContext:
      type: object
      required:
        - sdlc_stage
      properties:
        sdlc_stage:
          type: string
          enum:
            - dev
            - cicd
            - prcheck
            - recurring
          description: Indicate at which point in the SDLC lifecycle the test was executed.
        git_scm_url:
          type: string
          description: |-
            Git SCM URL associated with the content, if known.

            This allows providing the Git SCM URL as context in cases where the input
            is not directly imported from a Git SCM repository.

            For example, a developer working in an IDE on source code which was cloned
            from, and will be proposed for merging back into, an SCM repository.
        git_scm_branch:
          type: string
          description: |-
            Git SCM branch associated with the content, if known.

            This allows providing the Git SCM branch as context in cases where the input
            is not directly imported from a Git SCM repository.

            For example, a developer working in an IDE on a feature branch.
      description: CreateTestContext identifies the context in which this Test occurs.
    types.CreateTestOptions:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/CreateExcludeRule'
          example:
            - {}
          minItems: 1
          maxItems: 1024
          description: |-
            Files from which findings should be excluded and removed from
            results.

            This is different from FindingAttributes.suppressions; the exclude is an
            up-front declaration that findings in the excluded files are
            immaterial to the test result (pass/fail), and should not be reported at all.

            Excluded files might still be used to link other files/findings though. For
            example, a SAST (source-to-sink) or SCA analysis (transitive dependency
            chain) might transit an excluded file, enabling discovery in a
            non-excluded file.
      description: CreateTestOptions defines options which determine how the Test is conducted.
    types.CvssRiskFactor:
      type: object
      required:
        - factor
        - cvss_version
        - vector
      properties:
        factor:
          type: string
          enum:
            - cvss
        cvss_version:
          type: string
          description: |-
            The CVSS version being described. This will be a published CVSS
            specification version, such as "3.1" or "4.0"
        vector:
          type: string
          description: |-
            CVSS vector string, the format of which may be CVSS specification version
            dependent.

            See https://www.first.org/cvss/specification-document#Vector-String for
            details.
    types.EpssRiskFactor:
      type: object
      required:
        - factor
        - value
      properties:
        factor:
          type: string
          enum:
            - epss
        value:
          type: number
          format: float
    types.FileObjectExcludeRule:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum:
            - file
        value:
          type: string
          example: helm/out/**
          description: A recursive glob matching files. Equivalent to a bare string.
    types.FindingAttributes:
      type: object
      required:
        - fingerprint
        - component
        - message
      properties:
        fingerprint:
          type: array
          items:
            $ref: '#/components/schemas/Fingerprint'
          description: |-
            Natural key, or fingerprint, to identify the same Finding across multiple
            Test runs. Unique per Test. Here's why:
            https://github.com/snyk/pr-experience-poc/blob/main/docs/design-documents/pr-inline-comments.md#why-do-we-need-fingerprints
        component:
          allOf:
            - $ref: '#/components/schemas/types.Component'
          description: Component in which the finding was discovered.
        delta:
          type: string
          enum:
            - introduced
            - removed
            - existing
          description: |-
            Represent whether a finding is net new (introduced), removed, or preserved
            in a test involving a diff between inputs.

            Only set in a differential test conducted with respect to base content.
        locations:
          type: array
          items:
            $ref: '#/components/schemas/io.snyk.reactive.FindingLocation'
          description: |-
            A set of locations where the result was detected. Only one location should
            be included unless the finding can only be resolved by making a change at
            every location.
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/Suggestion'
          maxItems: 3
          description: |-
            Suggestions are indications given to the user that might help with
            mitigating the finding.

            For mitigation with a higher degree of confidence, remediation and fix
            relationship links should be used.
        message:
          type: object
          properties:
            header:
              type: string
              maxLength: 100
              description: |-
                Short text description of finding rule.

                Could be sourced from `sarif.Runs.Tool.Driver.Rules.ShortDescription.Text`.
            text:
              type: string
              maxLength: 2000
              description: |-
                Full text description of the finding rule.

                Mapped from `sarif.Runs.Results.Message.Text`.
            markdown:
              type: string
              maxLength: 2000
              description: |-
                Markdown description of the finding rule.

                Mapped from `sarif.Runs.Results.Message.Markdown`.
            arguments:
              type: array
              items:
                type: string
              example:
                - '[password_token](0)'
              maxItems: 20
              description: |-
                Arguments to the finding rule.

                Mapped from `sarif.Runs.Results.Message.Arguments`.
          required:
            - header
            - text
            - markdown
            - arguments
        rating:
          $ref: '#/components/schemas/types.FindingRating'
        suppression:
          $ref: '#/components/schemas/types.Suppression'
        codeFlows:
          type: array
          items:
            $ref: '#/components/schemas/types.CodeFlow'
        referenceId:
          $ref: '#/components/schemas/types.ReferenceId'
        policy:
          $ref: '#/components/schemas/types.Policyv1'
        isAutofixable:
          type: boolean
      description: A Finding entity with a common format for all types of security scans. Notably, this is a sub-resource of a Test.
    types.FindingCounts:
      type: object
      required:
        - count_by
        - count_by_adjusted
        - count_by_suppressed
        - count_key_order_asc
        - count
        - count_suppressed
        - count_adjusted
      properties:
        count_by:
          type: object
          properties:
            severity:
              type: object
              additionalProperties:
                type: integer
                format: uint32
          required:
            - severity
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: uint32
          description: |-
            Total finding counts (including ignores) grouped by severity and
            possibly other factors.
        count_by_adjusted:
          type: object
          properties:
            severity:
              type: object
              additionalProperties:
                type: integer
                format: uint32
          required:
            - severity
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: uint32
          description: |-
            Net finding counts (excluding ignores) grouped by severity and possibly other
            factors.
        count_by_suppressed:
          type: object
          properties:
            severity:
              type: object
              additionalProperties:
                type: integer
                format: uint32
          required:
            - severity
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: uint32
          description: Net suppressed finding count, grouped by severity and possibly other factors.
        count_key_order_asc:
          type: object
          properties:
            severity:
              type: array
              items:
                type: string
              description: FindingCounts has a deterministic ordering for severity counts.
              default:
                - none
                - low
                - medium
                - high
                - critical
          required:
            - severity
          additionalProperties:
            type: array
            items:
              type: string
          description: |-
            Ordering hint for the grouping keys in count_by.

            Record key is a well-known grouping of the resource object, matched with
            count_by.

            Record values are arrays of known possible values for the group keys in
            ascending order, from lowest to highest. Values other than those enumerated
            must be tolerated; their ordering is unspecified with respect to enumerated
            values.
        count:
          type: integer
          format: uint32
          description: Net count of findings, including suppressions.
        count_suppressed:
          type: integer
          format: uint32
          description: Findings excluded from the count shown to users, including ignored findings.
        count_adjusted:
          type: integer
          format: uint32
          description: Net count of findings minus suppressions.
    types.FindingIdParam:
      type: object
      required:
        - finding_id
      properties:
        finding_id:
          type: string
          format: uuid
          description: The finding identity (fingerprint). Uniquely identified in combination with a Test ID.
    types.FindingNumericalRating:
      type: object
      required:
        - score
        - factors
      properties:
        score:
          type: integer
          minimum: 0
          maximum: 1000
        factors:
          type: array
          items:
            $ref: '#/components/schemas/RiskFactors'
    types.FindingRating:
      type: object
      required:
        - severity
        - severity_method
      properties:
        risk:
          $ref: '#/components/schemas/types.FindingNumericalRating'
        priority:
          $ref: '#/components/schemas/types.FindingNumericalRating'
        severity:
          type: object
          required:
            - value
          properties:
            value:
              type: string
              enum:
                - none
                - info
                - low
                - medium
                - high
                - critical
              description: Current value.
            original_value:
              type: string
              enum:
                - none
                - info
                - low
                - medium
                - high
                - critical
              description: Original value, if modified.
            reason:
              type: string
              enum:
                - manual
                - policy
                - other
              description: Reason for the modification, if modified.
          description: A value which may be modified by enrichment stages.
        severity_method:
          type: string
          enum:
            - CVSSv2
            - CVSSv3
            - CVSSv31
            - CVSSv4
            - OWASP
            - other
        justification:
          type: string
          description: Optional reason for rating the vulnerability like this
      description: The severity and risk rating of the vulnerability
    types.FindingRelationships:
      type: object
      properties:
        sca_vuln_details:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: |-
            Relate to details about the component vulnerability discovered in the SCA
            finding.
        sast_rule_details:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Relate to details about the rule which was violated in a SAST finding.
        explanation:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          example:
            links:
              related: https://security.snyk.io/rules/cloud/SNYK-CC-AWS-421
          description: Relate to a human-readable webpage that explains the finding, if available.
        raw_details:
          type: object
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              type: object
              properties:
                content_types:
                  type: array
                  items:
                    type: string
                  minItems: 1
                  description: |-
                    Content MIME types which can be used in the Accept header when requesting the
                    related raw data.

                    This property must not be empty, making explicit what type of content
                    the API client will be receiving in the raw details resource response.
              required:
                - content_types
              additionalProperties: {}
          required:
            - links
            - meta
          example:
            links:
              related: /orgs/{org_id}/sarif/{finding_id}#/runs/0/tool/results/2
            meta:
              content_types:
                - application/sarif+json
          description: |-
            Relate to the raw scan outputs. May be SARIF, CycloneDX+VEX or other
            scan-specific formats.

            The relationship link should point to the resource URL where the raw scan
            output can be retrieved.

            The link MAY include a URL fragment to locate the finding's position within
            the document object.

            For JSON-based MIME types, this fragment MUST be a JSON Pointer.
            For XML-based MIME types, this fragment MUST be an XPath expression.

            If the fragment is specified, the fragment form MUST be compatible with all
            of the content types advertised. For example, the link MUST NOT provide a JSON
            Pointer fragment if an XML media type is advertised.
        fix_details:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Relate to fix information for the finding, if available.
        remediations:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Relate to remediations for the finding, if available.
        autofixes:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Relate to autofixes for the finding, if available.
        policy_modifications:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Policy modifications applied to this finding, if available.
      description: Resources which may relate to a Finding.
    types.FindingResource:
      type: object
      required:
        - id
        - type
        - attributes
        - relationships
      properties:
        id:
          type: string
          format: uuid
          description: Unique identity of this Finding instance.
        type:
          type: string
          enum:
            - findings
        attributes:
          $ref: '#/components/schemas/types.FindingAttributes'
        relationships:
          $ref: '#/components/schemas/types.FindingRelationships'
      description: FindingResource models a JSON API Finding resource.
    types.FindingsSummary:
      type: object
      required:
        - counts
        - type
        - artifacts
        - path
        - coverage
      properties:
        counts:
          $ref: '#/components/schemas/types.FindingCounts'
        type:
          type: string
        artifacts:
          type: integer
        path:
          type: string
        coverage:
          type: array
          items:
            $ref: '#/components/schemas/types.Coverage'
      description: Summary statistics about a Test's Findings.
    types.GitCommit:
      type: string
      example: 23ee663c96889a1ce6f62217adf4dea2bea1b09e
      minLength: 40
      pattern: '[0-9a-f]+'
      description: Git commit SHA.
    types.GitSCMInput:
      type: object
      required:
        - type
        - spec
      properties:
        type:
          type: string
          enum:
            - git-scm
        spec:
          $ref: '#/components/schemas/types.GitScmImportSpec'
      description: Test input obtained from a Git SCM.
    types.GitScmImportSpec:
      type: object
      required:
        - remote_url
      properties:
        remote_url:
          type: string
          example: https://github.com/snyk/cli.git
          description: Git SCM repository URL.
        branch:
          type: string
          description: branch is optional. If not provided, the default branch is used.
        base:
          allOf:
            - $ref: '#/components/schemas/types.GitCommit'
          description: base is optional. If provided, it is used in supplying differential test data.
        target:
          allOf:
            - $ref: '#/components/schemas/types.GitCommit'
          description: |-
            target is optional. If not provided the current HEAD of the selected branch is used.

            If target is provided and branch is not, no branch metadata is associated with the test.
            If target is provided and branch is, but target is not an ancestor of branch, the wrong
            branch will be associated with a test. It is the caller's responsibility to ensure this is correct.
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/ExcludeRule'
          example:
            - {}
          description: Components that should be excluded when importing the SCM contents into a Workspace.
      description: |-
        Git SCM import specification, which defines how to import content from a Git
        SCM repository location into a workspace for testing, or a set of workspaces
        for differential testing.
    types.IdentityFingerprint:
      type: object
      required:
        - scheme
        - value
      properties:
        scheme:
          type: string
          enum:
            - identity
        value:
          type: string
    types.LegacyDeepcodeBundleAddress:
      type: object
      required:
        - scheme
        - bundle_id
      properties:
        scheme:
          type: string
          enum:
            - deepcode-bundle
        bundle_id:
          type: string
          pattern: '[0-9a-f]{64}'
          description: Legacy Deepcode bundle ID is a sha256 sum (64 hex digits).
      description: |-
        Legacy Deepcode API bundle.

        This is provided provisionally for compatibility purposes.
    types.OtherObjectExcludeRule:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - other
      additionalProperties: {}
      description: |-
        OtherObjectExcludeRule is a placeholder expansion value, for when types of exclusion rules
        were used in testing that are not present in the called version of the API.
    types.PackageObject:
      type: object
      required:
        - type
        - name
        - version
      properties:
        type:
          type: string
          example: npm
          description: Package management system or ecosystem type.
        root:
          type: string
          example: https://my.pypi.internal:8888
          format: uri
          description: |-
            Package management system root location.

            If set, isolates the package to a private ecosystem repository.

            Defaults to "the canonical public ecosystem repository root" for the package ecosystem type.
        name:
          type: string
          example: '@typespec/openapi3'
          description: Package name, possibly with a namespace prefix.
        version:
          type: string
          example: 0.58.0
          description: |-
            Package version. One would hope this is semver but this generally depends
            on the ecosystem and its package standards and requirements.
        meta:
          allOf:
            - $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Free-form metadata about this package.
        subpath:
          type: string
          description: Sub-package qualifier, if applicable.
      description: |-
        PackageObject represents a decomposed Package URL, enriched with a resolved
        package repository root location. This disambiguates public packages from
        private packages in security SCA and remediation.
    types.PackageURL:
      type: string
      format: uri
      description: Package information represented in Package URL (pURL) form.
    types.Policyv1:
      type: object
      properties:
        originalLevel:
          type: string
          description: The original severity generated by the code scanner before any policy modifications.
        originalSeverity:
          type: string
        severity:
          type: string
    types.ReferenceId:
      type: object
      required:
        - identifier
        - index
      properties:
        identifier:
          type: string
        index:
          type: integer
    types.Rules:
      type: object
      required:
        - id
        - name
        - shortDescription
        - defaultConfiguration
        - help
        - properties
      properties:
        id:
          type: string
        name:
          type: string
        shortDescription:
          type: object
          properties:
            text:
              type: string
          required:
            - text
        defaultConfiguration:
          type: object
          properties:
            level:
              type: string
          required:
            - level
        help:
          type: object
          properties:
            markdown:
              type: string
            text:
              type: string
          required:
            - markdown
            - text
        properties:
          type: object
          properties:
            tags:
              type: array
              items:
                type: string
            categories:
              type: array
              items:
                type: string
            exampleCommitDescriptions:
              type: array
              items:
                type: string
            exampleCommitFixes:
              type: array
              items:
                type: object
                properties:
                  commitUrl:
                    type: string
                  lines:
                    type: array
                    items:
                      type: object
                      properties:
                        line:
                          type: string
                        lineNumber:
                          type: integer
                        linechange:
                          type: string
                      required:
                        - line
                        - lineNumber
                        - linechange
                required:
                  - commitUrl
                  - lines
            precision:
              type: string
            repoDatasetSize:
              type: integer
            cwe:
              type: array
              items:
                type: string
          required:
            - tags
            - categories
            - exampleCommitDescriptions
            - exampleCommitFixes
            - precision
            - repoDatasetSize
            - cwe
      description: Based on Sarif rules
    types.ScaProblemFingerprint:
      type: object
      required:
        - scheme
        - value
      properties:
        scheme:
          type: string
          enum:
            - sca-problem
        value:
          type: string
    types.ScanType:
      type: string
      enum:
        - sca
        - sast
        - other
      description: |-
        Security scan type. The scan type determines what types of attributes one
        might expect to find in the finding.
    types.SuggestedOther:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - other
      additionalProperties: {}
      description: SuggestedOther that aren't yet defined in this API version.
    types.SuggestedPackageUpgrade:
      type: object
      required:
        - type
        - current_package
      properties:
        type:
          type: string
          enum:
            - package-upgrade
        current_package:
          allOf:
            - $ref: '#/components/schemas/Package'
          description: Affected package.
        upgrade_package:
          allOf:
            - $ref: '#/components/schemas/Package'
          description: |-
            Upgrade package in which the vulnerability is no longer present.

            If unset, no upgrade version is available.
        upgrade_conflicts:
          type: boolean
          enum:
            - true
            - false
          nullable: true
          description: |-
            Indicate whether the upgrade version is known to conflict with other
            dependencies on the same package.

            If false, the upgrade does not conflict and should be applicable.

            If null or missing, conflict status is unknown or was not calculated;
            applying the upgrade could fail.
      description: |-
        SuggestedPackageUpgrade provides some basic information on how to mitigate an
        SCA finding in a managed package ecosystem with an upgrade.

        The upgrade does not take into account other dependency paths to the affected
        package which may have conflicting constraints. The upgrade version may
        introduce other vulnerabilities. This is the main difference between a
        suggestion and a remediation.

        For a comprehensive mitigation with satisfiability and security guarantees,
        the remediation relation should be used.

        If conflicts are known to exist this may be reported, but the absense of this
        flag should not be taken as a guarantee conflicts will not be encountered. It
        only means the conflict status is unknown.
    types.Suppression:
      type: object
      required:
        - kind
      properties:
        kind:
          type: string
          enum:
            - ignored
            - pending_ignore_approval
            - other
        justification:
          type: string
        details:
          $ref: '#/components/schemas/types.SuppressionDetails'
      description: Reasons for why a Finding can be suppressed from a Test result. This MAY NOT be required at all, given the presentation
    types.SuppressionDetails:
      type: object
      required:
        - expiration
        - category
        - ignoredOn
        - ignoredBy
      properties:
        expiration:
          type: string
        category:
          type: string
        ignoredOn:
          type: string
        ignoredBy:
          $ref: '#/components/schemas/types.User'
      description: Suppression meta data
    types.TestContext:
      type: object
      required:
        - sdlc_stage
      properties:
        sdlc_stage:
          type: string
          enum:
            - dev
            - cicd
            - prcheck
            - recurring
            - other
          description: |-
            Indicate at which point in the SDLC lifecycle the test was executed.
            `other` is returned if the test was created with a newer version of
            the API including a new SDLC stage, not supported in the version of
            the API used for retrieval.
        git_scm_url:
          type: string
          description: |-
            Git SCM URL associated with the content, if known.

            This allows providing the Git SCM URL as context in cases where the input
            is not directly imported from a Git SCM repository.

            For example, a developer working in an IDE on source code which was cloned
            from, and will be proposed for merging back into, an SCM repository.
        git_scm_branch:
          type: string
          description: |-
            Git SCM branch associated with the content, if known.

            This allows providing the Git SCM branch as context in cases where the input
            is not directly imported from a Git SCM repository.

            For example, a developer working in an IDE on a feature branch.
      description: TestContext identifies the context in which this Test occurs.
    types.TestError:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Error code, references Snyk error catalog.
        reason:
          type: string
          description: Descriptive reason for the error.
        links:
          allOf:
            - $ref: '#/components/schemas/io.snyk.api.common.ErrorLink'
          description: Links to error detail information.
        meta:
          allOf:
            - $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Free-form metadata associated with the error.
      description: An error that occurred during a Test.
    types.TestExecStatus:
      type: string
      enum:
        - pending
        - running
        - done
    types.TestOptions:
      type: object
      properties:
        exclude:
          type: array
          items:
            $ref: '#/components/schemas/ExcludeRule'
          example:
            - {}
          minItems: 1
          maxItems: 1024
          description: |-
            Files from which findings should be excluded and removed from
            results.

            This is different from FindingAttributes.suppressions; the exclude is an
            up-front declaration that findings in the excluded files are
            immaterial to the test result (pass/fail), and should not be reported at all.

            Excluded files might still be used to link other files/findings though. For
            example, a SAST (source-to-sink) or SCA analysis (transitive dependency
            chain) might transit an excluded file, enabling discovery in a
            non-excluded file.
      description: |-
        TestOptions defines options which determine how the Test is conducted.
        In includes the fields used in create test options, but in a backwards compatible manner.
    types.TestOutcome:
      type: object
      required:
        - result
      properties:
        result:
          type: string
          enum:
            - pass
            - fail
        reason:
          type: string
          enum:
            - policy_breach
            - timeout
            - other
      description: |-
        The outcome of a Test; pass or fail. It is possible for the Test to show
        failure before the overall status has completed.
    types.TestRelationships:
      type: object
      required:
        - findings
      properties:
        findings:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Relationship link to the findings collection for this test.
        logs:
          type: object
          required:
            - links
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  pattern: ^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$
                id:
                  type: string
                  format: uuid
              required:
                - type
                - id
            links:
              $ref: '#/components/schemas/io.snyk.api.common.RelatedLink'
            meta:
              $ref: '#/components/schemas/io.snyk.api.common.Meta'
          description: Relate to application-facing logs produced by the test.
      description: Resources related to a test.
    types.TestResource:
      type: object
      required:
        - id
        - type
        - attributes
        - relationships
      properties:
        id:
          type: string
          format: uuid
          description: Test resource ID. A unique ID assigned to each created test.
        type:
          type: string
          enum:
            - tests
          description: Test resource type.
        attributes:
          type: object
          properties:
            state:
              allOf:
                - $ref: '#/components/schemas/types.TestState'
              description: |-
                State of the test, which should be polled to status "running" or "done"
                before unmarshaling into this type.
            context:
              allOf:
                - $ref: '#/components/schemas/types.TestContext'
              description: |-
                Test context; pertinent information important to associate with the outcome
                of the test and its further processing, but is not directly used in the
                test.

                These are worth modeling with a concrete type, rather than as generic
                free-form metadata to communicate to consumers of the test what values are
                available.
            options:
              allOf:
                - $ref: '#/components/schemas/types.TestOptions'
              description: |-
                TestOptions are arguments which were used to configure the test and determine the
                behavior of how it is conducted.

                Options are optional when creating a test and may be derived from other
                sources, such as a test configuration policy if not specified. Provided
                options may be merged with or overridden by such policy.

                In the requested Test resource, these options will reflect the effective
                options resolved and applied to the execution of the test.
            outcome:
              allOf:
                - $ref: '#/components/schemas/types.TestOutcome'
              description: |-
                Overall outcome of the security test: pass or fail.

                This outcome may indicate failure early even while the test is still
                running to completion.
            summary:
              allOf:
                - $ref: '#/components/schemas/types.FindingsSummary'
              description: |-
                Summary of all the findings discovered by all the security scans conducted
                for this test.
          required:
            - state
            - outcome
            - summary
          description: Summary-level attributes of a test.
        relationships:
          $ref: '#/components/schemas/types.TestRelationships'
      description: TestResource models a JSON API Test resource.
    types.TestState:
      type: object
      required:
        - status
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/types.TestExecStatus'
          description: Test execution status.
        errors:
          allOf:
            - $ref: '#/components/schemas/types.TestError'
          description: Errors that occurred during the test execution.
      description: The state of a Test execution. Does not include the pass or fail.
    types.ThreadFlow:
      type: object
      required:
        - locations
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/io.snyk.reactive.FindingSourceLocation'
    types.User:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string
      description: User definition
    types.VulnerabilityFactRiskFactor:
      type: object
      required:
        - factor
        - name
        - value
      properties:
        factor:
          type: string
          enum:
            - vulnerability-fact
        name:
          type: string
        value:
          type: boolean
    types.VulnerabilityGenericFactor:
      type: object
      required:
        - factor
        - name
        - value
      properties:
        factor:
          type: string
          enum:
            - vulnerability-generic-fact
        name:
          type: string
        value:
          type: boolean
    types.VulnerabilityInstanceFactRiskFactor:
      type: object
      required:
        - factor
        - name
        - value
      properties:
        factor:
          type: string
          enum:
            - vulnerability-instance-fact
        name:
          type: string
        value:
          type: boolean
    types.WorkspaceV1Address:
      type: object
      required:
        - scheme
        - workspace_id
      properties:
        scheme:
          type: string
          enum:
            - workspace-v1
        workspace_id:
          type: string
          pattern: '[0-9a-f]{64}'
          description: Workspace v1 is a sha256 sum (64 hex digits).
      description: |-
        Workspace v1 content storage address.

        TODO: Update this as needed.
servers:
  - url: /rest
    description: Rest API server
    variables: {}
x-snyk-api-stability: wip
