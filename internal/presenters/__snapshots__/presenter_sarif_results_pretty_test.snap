
[TestPresenterSarifResultsPretty_LowIssues - 1]

Testing /path/to/project ...

Open Issues

 âœ— [LOW] Use of Hardcoded Credentials
   Path: pkg/analytics/analytics_test.go, line 248
   Info: Do not hardcode credentials in code. Found hardcoded credential used in Username.

 âœ— [LOW] Use of Hardcoded Credentials
   Path: internal/api/api_test.go, line 159
   Info: Do not hardcode credentials in code. Found hardcoded credential used in Username.

 âœ— [LOW] Use of Password Hash With Insufficient Computational Effort
   Path: pkg/analytics/analytics.go, line 230
   Info: The SHA1 hash (used in crypto.sha1.New) is insecure. Consider changing it to a secure hash algorithm


â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚ Test Summary                                 â”‚
â”‚                                              â”‚
â”‚   Organization:      test-org                â”‚
â”‚   Test type:         Static code analysis    â”‚
â”‚   Project path:      /path/to/project        â”‚
â”‚                                              â”‚
â”‚   Total issues:   3                          â”‚
â”‚   Ignored issues: 0 [ 0 LOW ]                â”‚
â”‚   Open issues:    3 [ 3 LOW ]                â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸ’¡ Tip

To view ignored issues, use the --include-ignores option. To view ignored issues only, use the --only-ignores option.

---

[TestPresenterSarifResultsPretty_MediumHighIssues - 1]

Testing /path/to/project ...

Open Issues

 âœ— [MEDIUM] Cleartext Transmission of Sensitive Information
   Path: app.js, line 63
   Info: http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.

 âœ— [MEDIUM] Information Exposure
   Path: app.js, line 23
   Info: Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.

 âœ— [MEDIUM] Allocation of Resources Without Limits or Throttling
   Path: routes/index.js, line 69
   Info: This endpoint handler performs a system command execution and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 âœ— [MEDIUM] Cross-Site Request Forgery (CSRF)
   Path: app.js, line 23
   Info: CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.

 âœ— [MEDIUM] Use of Hardcoded Credentials
   Path: db.js, line 30
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 âœ— [HIGH] Hardcoded Secret
   Path: app.js, line 60
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 âœ— [HIGH] NoSQL Injection
   Path: routes/index.js, line 31
   Info: Unsanitized input from the HTTP request body flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 âœ— [HIGH] NoSQL Injection
   Path: routes/index.js, line 108
   Info: Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 âœ— [HIGH] NoSQL Injection
   Path: routes/index.js, line 136
   Info: Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.


â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚ Test Summary                                 â”‚
â”‚                                              â”‚
â”‚   Organization:      test-org                â”‚
â”‚   Test type:         Static code analysis    â”‚
â”‚   Project path:      /path/to/project        â”‚
â”‚                                              â”‚
â”‚   Total issues:   9                          â”‚
â”‚   Ignored issues: 0 [ 0 HIGH  0 MEDIUM ]     â”‚
â”‚   Open issues:    9 [ 4 HIGH  5 MEDIUM ]     â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸ’¡ Tip

To view ignored issues, use the --include-ignores option. To view ignored issues only, use the --only-ignores option.

---

[TestPresenterSarifResultsPretty_NoIssues - 1]

Testing /path/to/project ...

â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚ Test Summary                                 â”‚
â”‚                                              â”‚
â”‚   Organization:      test-org                â”‚
â”‚   Test type:         Static code analysis    â”‚
â”‚   Project path:      /path/to/project        â”‚
â”‚                                              â”‚
â”‚   Total issues:   0                          â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸ’¡ Tip

To view ignored issues, use the --include-ignores option. To view ignored issues only, use the --only-ignores option.

---

[TestPresenterSarifResultsPretty_MediumHighIssuesWithColor - 1]

Testing /path/to/project ...

Open Issues

 [33mâœ— [MEDIUM][0m [1mCleartext Transmission of Sensitive Information[0m
   Path: app.js, line 63
   Info: http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.

 [33mâœ— [MEDIUM][0m [1mInformation Exposure[0m
   Path: app.js, line 23
   Info: Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.

 [33mâœ— [MEDIUM][0m [1mAllocation of Resources Without Limits or Throttling[0m
   Path: routes/index.js, line 69
   Info: This endpoint handler performs a system command execution and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 [33mâœ— [MEDIUM][0m [1mCross-Site Request Forgery (CSRF)[0m
   Path: app.js, line 23
   Info: CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.

 [33mâœ— [MEDIUM][0m [1mUse of Hardcoded Credentials[0m
   Path: db.js, line 30
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 [31mâœ— [HIGH][0m [1mHardcoded Secret[0m
   Path: app.js, line 60
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 [31mâœ— [HIGH][0m [1mNoSQL Injection[0m
   Path: routes/index.js, line 31
   Info: Unsanitized input from the HTTP request body flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 [31mâœ— [HIGH][0m [1mNoSQL Injection[0m
   Path: routes/index.js, line 108
   Info: Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 [31mâœ— [HIGH][0m [1mNoSQL Injection[0m
   Path: routes/index.js, line 136
   Info: Unsanitized input from an HTTP parameter flows into findById, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.


â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚ Test Summary                                 â”‚
â”‚                                              â”‚
â”‚   Organization:      test-org                â”‚
â”‚   Test type:         Static code analysis    â”‚
â”‚   Project path:      /path/to/project        â”‚
â”‚                                              â”‚
â”‚   Total issues:   9                          â”‚
â”‚   Ignored issues: [1m0[0m [[31m 0 HIGH [0m[33m 0 MEDIUM [0m]     â”‚
â”‚   Open issues:    [1m9[0m [[31m 4 HIGH [0m[33m 5 MEDIUM [0m]     â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸ’¡ Tip

To view ignored issues, use the --include-ignores option. To view ignored issues only, use the --only-ignores option.

---
