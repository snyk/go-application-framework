
[TestPresenterLocalFinding_with_Issues - 1]

Testing path/to/project
 ✗ [high] Server-Side Request Forgery (SSRF)
   Path: routes/profileImageUrlUpload.ts
   Info: Unsanitized input from the HTTP request body flows into request.get, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.

 ✗ [high] Hardcoded Secret
   Path: lib/insecurity.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [high] Hardcoded Secret
   Path: lib/insecurity.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in express-jwt.default.

 ✗ [high] NoSQL Injection
   Path: routes/updateProductReviews.ts
   Info: Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 ✗ [high] NoSQL Injection
   Path: routes/likeProductReviews.ts
   Info: Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 ✗ [high] NoSQL Injection
   Path: routes/likeProductReviews.ts
   Info: Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 ✗ [high] NoSQL Injection
   Path: routes/likeProductReviews.ts
   Info: Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 ✗ [high] NoSQL Injection
   Path: routes/likeProductReviews.ts
   Info: Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.

 ✗ [high] SQL Injection
   Path: data/static/codefixes/unionSqlInjectionChallenge_3.ts
   Info: Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.

 ✗ [high] SQL Injection
   Path: data/static/codefixes/unionSqlInjectionChallenge_1.ts
   Info: Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.

 ✗ [high] SQL Injection
   Path: routes/search.ts
   Info: Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.

 ✗ [high] SQL Injection
   Path: data/static/codefixes/dbSchemaChallenge_1.ts
   Info: Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.

 ✗ [high] SQL Injection
   Path: routes/login.ts
   Info: Unsanitized input from the HTTP request body flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.

 ✗ [high] Hardcoded Secret
   Path: lib/insecurity.ts
   Info: Hardcoded value is used as a cipher key (in jsonwebtoken.default.verify). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.

 ✗ [high] Hardcoded Secret
   Path: lib/insecurity.ts
   Info: Hardcoded value is used as a cipher key (in crypto.default.createHmac). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.

 ✗ [high] Hardcoded Secret
   Path: lib/insecurity.ts
   Info: Hardcoded value is used as a cipher key (in crypto.default.createHmac). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.

 ✗ [high] Path Traversal
   Path: routes/vulnCodeFixes.ts
   Info: Unsanitized input from the HTTP request body flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.

 ✗ [high] Path Traversal
   Path: routes/vulnCodeFixes.ts
   Info: Unsanitized input from the HTTP request body flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.

 ✗ [high] Path Traversal
   Path: routes/profileImageUrlUpload.ts
   Info: Unsanitized input from cookies flows into createWriteStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.

 ✗ [high] Path Traversal
   Path: routes/vulnCodeSnippet.ts
   Info: Unsanitized input from the HTTP request body flows into fs.default.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.

 ✗ [high] Path Traversal
   Path: routes/vulnCodeSnippet.ts
   Info: Unsanitized input from the HTTP request body flows into fs.default.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.

 ✗ [high] Arbitrary File Write via Archive Extraction (Zip Slip)
   Path: routes/fileUpload.ts
   Info: Unsanitized input from Unzipper library flows into createWriteStream, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.

 ✗ [low] Improper Type Validation
   Path: routes/profileImageUrlUpload.ts
   Info: The type of this object, coming from body and the value of its match property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: routes/profileImageUrlUpload.ts
   Info: The type of this object, coming from body and the value of its split property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: routes/profileImageUrlUpload.ts
   Info: The type of this object, coming from body and the value of its split property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: routes/vulnCodeSnippet.ts
   Info: The type of this object, coming from body and the value of its length property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: server.ts
   Info: The type of this object, coming from body and the value of its length property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: server.ts
   Info: The type of this object, coming from body and the value of its length property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: routes/vulnCodeSnippet.ts
   Info: The type of this object, coming from body and the value of its includes property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: routes/vulnCodeSnippet.ts
   Info: The type of this object, coming from body and the value of its filter property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: server.ts
   Info: The type of this object, coming from body and the value of its trim property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: server.ts
   Info: The type of this object, coming from body and the value of its trim property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Improper Type Validation
   Path: server.ts
   Info: The type of this object, coming from body and the value of its trim property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/changePassword.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/changePassword.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/changePassword.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/complain.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/contact.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/contact.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/profile.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/register.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/dataErasure.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/chatbot.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/totpSetup.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/totpSetup.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/deluxe.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/deluxe.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/restApi.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/restApi.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/search.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/search.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/dataExport.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/administration.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/b2bOrder.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/b2bOrder.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/basket.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/basket.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/profileImageUploadSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/profileImageUploadSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/profileImageUploadSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/profileImageUploadSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/basketApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/basketApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/addressApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deliveryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deliveryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deliveryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deliveryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/erasureRequestApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/erasureRequestApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/erasureRequestApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/erasureRequestApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/erasureRequestApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/erasureRequestApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/erasureRequestApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userProfileSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/feedbackApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/feedbackApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/register.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/basketItemApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/userApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/memoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/memoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/memoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/quantityApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/productReviewApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/productReviewApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/orderHistoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/orderHistoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/orderHistoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/orderHistoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/orderHistoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/orderHistoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/orderHistoryApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/dataExportApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/passwordApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/passwordApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/passwordApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/passwordApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/paymentApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/authenticatedUsersSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/authenticatedUsersSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/deluxeApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/securityAnswerApiSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in post.

 ✗ [low] Use of Password Hash With Insufficient Computational Effort
   Path: lib/insecurity.ts
   Info: md5 hash (used in crypto.default.createHash) is insecure. Consider changing it to a secure hashing algorithm.

 ✗ [low] Use of Password Hash With Insufficient Computational Effort
   Path: Gruntfile.js
   Info: md5 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/changePassword.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/changePassword.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/changePassword.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/complain.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/noSql.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/contact.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/contact.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/profile.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/register.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/dataErasure.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/chatbot.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/totpSetup.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/restApi.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/restApi.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/search.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/search.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/dataExport.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/administration.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/b2bOrder.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/b2bOrder.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/cypress/e2e/basket.spec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in login.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/chatBotSpec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/loginApiSpec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/securityAnswerApiSpec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in post.

 ✗ [low] Use of Hardcoded Credentials
   Path: test/api/2faSpec.ts
   Info: Do not hardcode credentials in code. Found hardcoded credential used in post.

 ✗ [low] Cleartext Transmission of Sensitive Information
   Path: test/api/productReviewApiSpec.ts
   Info: http.get uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Hardcoded value is used as a cipher key (in jsonwebtoken.default.sign). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.

 ✗ [low] Hardcoded Secret
   Path: test/cypress/e2e/totpSetup.spec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/2faSpec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/web3Spec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/web3Spec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/web3Spec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [low] Hardcoded Secret
   Path: test/api/web3Spec.ts
   Info: Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.

 ✗ [medium] Use of Hardcoded Credentials
   Path: frontend/src/app/oauth/oauth.component.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [medium] Use of Hardcoded Credentials
   Path: frontend/src/app/oauth/oauth.component.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [medium] Use of Hardcoded Credentials
   Path: frontend/src/app/Services/two-factor-auth-service.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [medium] Use of Hardcoded Credentials
   Path: frontend/src/app/Services/two-factor-auth-service.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in password.

 ✗ [medium] Use of Hardcoded Credentials
   Path: frontend/src/app/oauth/oauth.component.spec.ts
   Info: Do not hardcode passwords in code. Found hardcoded password used in passwordRepeat.

 ✗ [medium] Prototype Pollution
   Path: routes/vulnCodeSnippet.ts
   Info: Unsanitized input from the HTTP request body flows into a member access and is used to access a property of this object by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.

 ✗ [medium] Prototype Pollution
   Path: routes/vulnCodeSnippet.ts
   Info: Unsanitized input from the HTTP request body flows into a member access and is used to access a property of this object by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.

 ✗ [medium] Prototype Pollution
   Path: routes/vulnCodeFixes.ts
   Info: Unsanitized input from the HTTP request body flows into a member access and is used to access a property of this object by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.

 ✗ [medium] Prototype Pollution
   Path: routes/vulnCodeFixes.ts
   Info: Unsanitized input from the HTTP request body flows into a member access and is used to access a property of this object by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/last-login-ip/last-login-ip.component.ts
   Info: Unsanitized input from browser storage flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/track-result/track-result.component.ts
   Info: Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/data-export/data-export.component.ts
   Info: Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/about/about.component.ts
   Info: Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/administration/administration.component.ts
   Info: Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/administration/administration.component.ts
   Info: Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: routes/userProfile.ts
   Info: Unsanitized input from cookies flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/search-result/search-result.component.ts
   Info: Unsanitized input from an HTTP parameter flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: routes/recycles.ts
   Info: Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).

 ✗ [medium] Cross-site Scripting (XSS)
   Path: frontend/src/app/data-export/data-export.component.ts
   Info: Unsanitized input from data from a remote resource flows into write, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).

 ✗ [medium] Cross-Site Request Forgery (CSRF)
   Path: server.ts
   Info: CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.

 ✗ [medium] Insecure JWT Verification Method
   Path: routes/authenticatedUsers.ts
   Info: A JWT decode() method is used that decodes the token but does not check its validity or integrity. If the JWT has originated from an untrusted source, decoded data could be crafted by an attacker and should not be considered safe to use or process within the application. Always use JWT verification methods to validate the structure and integrity of a token.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/vulnCodeSnippet.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/vulnCodeFixes.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/userProfile.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/languages.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/easterEgg.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/dataErasure.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/dataErasure.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/privacyPolicyProof.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/premiumReward.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/videoHandler.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

 ✗ [medium] Allocation of Resources Without Limits or Throttling
   Path: routes/videoHandler.ts
   Info: This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.

╭────────────────────────────────────────────────────────────────╮
│                                                                │
│ Test Summary                                                   │
│                                                                │
│   Organization:                                                │
│   Test type:         Static code analysis                      │
│   Project path:      path/to/project                           │
│                                                                │
│   Total issues:   18                                           │
│   Ignored issues: [1m3[0m [ 0 CRITICAL [91m 2 HIGH [0m[93m 1 MEDIUM [0m 0 LOW ]    │
│   Open issues:    [1m5[0m [ 1 CRITICAL [91m 3 HIGH [0m[93m 1 MEDIUM [0m 0 LOW ]    │
│                                                                │
╰────────────────────────────────────────────────────────────────╯
---

[TestBoxStyle - 1]
╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│                                                                                                                                                                                                                                                                                 │
│  ✗ [low] Cleartext Transmission of Sensitive Information                                                                                                                                                                                                                        │
│    Path: node_modules/qs/support/expresso/test/http.test.js                                                                                                                                                                                                                     │
│    Info: http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.    │
│                                                                                                                                                                                                                                                                                 │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
---

[TestFindingComponent - 1]

 ✗ [low] Cleartext Transmission of Sensitive Information
   Path: node_modules/qs/support/expresso/test/http.test.js
   Info: http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.

---
