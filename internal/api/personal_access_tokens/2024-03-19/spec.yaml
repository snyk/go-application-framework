# OpenAPI spec generated by vervet, DO NOT EDIT
components:
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      example: "2021-07-01T00:00:00Z"
      schema:
        format: date-time
        type: string
    LocationHeader:
      description: |
        A header providing a URL for the location of a resource
      example: https://example.com/resource/4
      schema:
        format: url
        type: string
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
      schema:
        format: uuid
        type: string
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      example: "2021-08-02T00:00:00Z"
      schema:
        format: date-time
        type: string
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/QueryVersion'
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/ActualVersion'
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      schema:
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
        example: ga
        type: string
  parameters:
    Version:
      description: The requested version of the endpoint to process the request
      example: "2021-06-04"
      in: query
      name: version
      required: true
      schema:
        $ref: '#/components/schemas/QueryVersion'
  responses:
    "400":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Bad Request: A parameter provided as a part of the request was
        invalid.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "401":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Unauthorized: the request requires an authentication token.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "403":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Forbidden: the request requires an authentication token with more
        or different permissions.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "404":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Not Found: The resource being operated on could not be found.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "500":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Internal Server Error: An error was encountered while attempting
        to process the request.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
  schemas:
    ActualVersion:
      description: Resolved API version
      pattern: ^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$
      type: string
    Error:
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
      properties:
        code:
          description: An application-specific error code, expressed as a string value.
          example: entity-not-found
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: 'The request was missing these required fields: ...'
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/ErrorLink'
        meta:
          additionalProperties: true
          example:
            key: value
          type: object
        source:
          additionalProperties: false
          example:
            pointer: /data/attributes
          properties:
            parameter:
              description: A string indicating which URI query parameter caused the
                error.
              example: param1
              type: string
            pointer:
              description: A JSON Pointer [RFC6901] to the associated entity in the
                request document.
              example: /data/attributes
              type: string
          type: object
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          example: "400"
          pattern: ^[45]\d\d$
          type: string
        title:
          description: A short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization.
          example: Bad request
          type: string
      required:
      - status
      - detail
      type: object
    ErrorDocument:
      additionalProperties: false
      example:
        errors:
        - detail: Permission denied for this resource
          status: "403"
        jsonapi:
          version: "1.0"
      properties:
        errors:
          example:
          - detail: Permission denied for this resource
            status: "403"
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
      - jsonapi
      - errors
      type: object
    ErrorLink:
      additionalProperties: false
      description: A link that leads to further details about this particular occurrance
        of the problem.
      example:
        about: https://example.com/about_this_error
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    JsonApi:
      additionalProperties: false
      example:
        version: "1.0"
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          example: "1.0"
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)$
          type: string
      required:
      - version
      type: object
    LinkProperty:
      example: https://example.com/api/resource
      oneOf:
      - description: A string containing the linkâ€™s URL.
        example: https://example.com/api/resource
        type: string
      - additionalProperties: false
        example:
          href: https://example.com/api/resource
        properties:
          href:
            description: A string containing the linkâ€™s URL.
            example: https://example.com/api/resource
            type: string
          meta:
            $ref: '#/components/schemas/Meta'
        required:
        - href
        type: object
    Meta:
      additionalProperties: true
      description: Free-form object that may contain non-standard information.
      example:
        key1: value1
        key2:
          sub_key: sub_value
        key3:
        - array_value1
        - array_value2
      type: object
    PatCreatedAt:
      description: Date/Time when the Personal Access Token was created.
      example: "2024-07-01T00:00:00Z"
      format: date-time
      type: string
    PatExpiresAt:
      description: Date/Time when the Personal Access Token is set to expire at.
      example: "2024-07-01T00:00:00Z"
      format: date-time
      type: string
    PatId:
      description: Unique identifier for the Personal Access Token.
      example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      format: ulid
      type: string
    PatLabel:
      description: Label for Personal Access Token.
      maxLength: 60
      minLength: 1
      type: string
    PatType:
      description: Type of the resource.
      enum:
      - personal_access_token
      type: string
    QueryVersion:
      description: Requested API version
      pattern: ^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$
      type: string
    SelfLink:
      additionalProperties: false
      example:
        self: https://example.com/api/this_resource
      properties:
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
info:
  title: pat-service
  version: 3.0.0
openapi: 3.0.3
paths:
  /openapi:
    get:
      description: List available versions of OpenAPI specification
      operationId: listAPIVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List of available versions is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
      - OpenAPI
  /openapi/{version}:
    get:
      description: Get OpenAPI specification effective at version.
      operationId: getAPIVersion
      parameters:
      - description: The requested version of the API
        in: path
        name: version
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OpenAPI specification matching requested version is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
      - OpenAPI
  /self/personal_access_token/metadata:
    get:
      description: Get Personal Access Token metadata.
      operationId: getPatMetadata
      parameters:
      - $ref: '#/components/parameters/Version'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    additionalProperties: false
                    properties:
                      attributes:
                        additionalProperties: false
                        properties:
                          hostname:
                            description: Hostname of the environment the token belongs
                              to. An empty string is returned if it is not associated
                              with an environment.
                            maxLength: 255
                            type: string
                        type: object
                      id:
                        $ref: '#/components/schemas/PatId'
                      type:
                        $ref: '#/components/schemas/PatType'
                    required:
                    - type
                    - id
                    - attributes
                    type: object
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/SelfLink'
                required:
                - data
                type: object
          description: Return Personal Access Token metadata.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          $ref: '#/components/responses/400'
        "500":
          $ref: '#/components/responses/500'
      summary: Get Personal Access Token metadata.
      tags:
      - PersonalAccessToken
      x-cerberus:
        authentication:
          skip: true
        authorization:
          skip: true
      x-snyk-api-owners:
      - '@snyk/access'
      x-snyk-api-releases:
      - "2024-03-19"
      x-snyk-api-version: "2024-03-19"
    x-snyk-api-resource: pats
    x-snyk-resource-singleton: true
  /self/personal_access_tokens:
    post:
      description: Create Personal Access Token.
      operationId: createPat
      parameters:
      - $ref: '#/components/parameters/Version'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              additionalProperties: false
              properties:
                data:
                  additionalProperties: false
                  properties:
                    attributes:
                      additionalProperties: false
                      properties:
                        expires_at:
                          $ref: '#/components/schemas/PatExpiresAt'
                        label:
                          $ref: '#/components/schemas/PatLabel'
                      required:
                      - label
                      - expires_at
                      type: object
                    type:
                      $ref: '#/components/schemas/PatType'
                  required:
                  - type
                  - attributes
                  type: object
              required:
              - data
              type: object
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                properties:
                  data:
                    additionalProperties: false
                    properties:
                      attributes:
                        additionalProperties: false
                        properties:
                          created_at:
                            $ref: '#/components/schemas/PatCreatedAt'
                          expires_at:
                            $ref: '#/components/schemas/PatExpiresAt'
                          label:
                            $ref: '#/components/schemas/PatLabel'
                          token:
                            pattern: snyk_(uat|sat)\.[a-z0-9]{8}\.[a-zA-Z0-9-_]+\.[a-zA-Z0-9-_]+
                            type: string
                        required:
                        - token
                        - label
                        - created_at
                        - expires_at
                        type: object
                      id:
                        $ref: '#/components/schemas/PatId'
                      type:
                        $ref: '#/components/schemas/PatType'
                    required:
                    - type
                    - id
                    - attributes
                    type: object
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/SelfLink'
                required:
                - data
                type: object
          description: Return newly created Personal Access Token.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              $ref: '#/components/headers/LocationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "500":
          $ref: '#/components/responses/500'
      summary: Create Personal Access Token.
      tags:
      - PersonalAccessToken
      x-cerberus:
        authorization:
          skip: true
        featureFlag:
          values:
          - personalAccessTokens
      x-snyk-api-owners:
      - '@snyk/access'
      x-snyk-api-releases:
      - "2024-03-19"
      x-snyk-api-version: "2024-03-19"
    x-snyk-api-resource: pats
servers:
- description: pat-service
  url: /hidden
tags:
- description: The OpenAPI specification for pat-service.
  name: OpenAPI
- description: Personal access tokens
  name: PersonalAccessToken
x-cerberus:
  authentication:
    strategies:
    - InternalJWT: {}
x-snyk-api-lifecycle: released
x-snyk-api-version: "2024-03-19"