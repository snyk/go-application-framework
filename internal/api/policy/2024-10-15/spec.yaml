# OpenAPI spec generated by vervet, DO NOT EDIT
components:
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      example: "2021-07-01T00:00:00Z"
      schema:
        format: date-time
        type: string
    InternalGlooNormalizedPathHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      schema:
        type: string
      x-snyk-internal: true
    InternalGlooOrgIdHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      schema:
        format: uuid
        type: string
      x-snyk-internal: true
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
      schema:
        format: uuid
        type: string
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      example: "2021-08-02T00:00:00Z"
      schema:
        format: date-time
        type: string
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/QueryVersion'
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      example: "2021-06-04"
      schema:
        $ref: '#/components/schemas/ActualVersion'
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      schema:
        enum:
          - wip
          - experimental
          - beta
          - ga
          - deprecated
          - sunset
        example: ga
        type: string
  parameters:
    EndingBefore:
      description: Return the page of results immediately before this cursor
      example: v1.eyJpZCI6IjExMDAifQo=
      in: query
      name: ending_before
      schema:
        type: string
    Limit:
      description: Number of results to return per page
      example: 10
      in: query
      name: limit
      schema:
        default: 10
        format: int32
        maximum: 100
        minimum: 10
        multipleOf: 10
        type: integer
    OrgId:
      description: Org ID
      in: path
      name: org_id
      required: true
      schema:
        format: uuid
        type: string
    PolicyId:
      description: Policy ID
      in: path
      name: policy_id
      required: true
      schema:
        format: uuid
        type: string
    Review:
      description: Policy rule review state e.g. approved
      explode: false
      in: query
      name: review
      schema:
        items:
          $ref: '#/components/schemas/PolicyReview'
        type: array
      style: form
    StartingAfter:
      description: Return the page of results immediately after this cursor
      example: v1.eyJpZCI6IjEwMDAifQo=
      in: query
      name: starting_after
      schema:
        type: string
    Version:
      description: The requested version of the endpoint to process the request
      example: "2021-06-04"
      in: query
      name: version
      required: true
      schema:
        $ref: '#/components/schemas/QueryVersion'
  responses:
    "204":
      description: The operation completed successfully with no content
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "400":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Bad Request: A parameter provided as a part of the request was
        invalid.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "401":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Unauthorized: the request requires an authentication token.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "403":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Forbidden: the request requires an authentication token with more
        or different permissions.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "404":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Not Found: The resource being operated on could not be found.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "409":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Conflict: The requested operation conflicts with the current state
        of the resource in some way.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "500":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: 'Internal Server Error: An error was encountered while attempting
        to process the request.'
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
  schemas:
    ActualVersion:
      description: Resolved API version
      pattern: ^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$
      type: string
    CreatePolicyPayload:
      properties:
        data:
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/PolicyAttributes'
            meta:
              $ref: '#/components/schemas/Meta'
            type:
              enum:
                - policy
              type: string
          required:
            - type
            - attributes
          type: object
      required:
        - data
      type: object
    Error:
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
      properties:
        code:
          description: An application-specific error code, expressed as a string value.
          example: entity-not-found
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: 'The request was missing these required fields: ...'
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/ErrorLink'
        meta:
          additionalProperties: true
          example:
            key: value
          type: object
        source:
          additionalProperties: false
          example:
            pointer: /data/attributes
          properties:
            parameter:
              description: A string indicating which URI query parameter caused the
                error.
              example: param1
              type: string
            pointer:
              description: A JSON Pointer [RFC6901] to the associated entity in the
                request document.
              example: /data/attributes
              type: string
          type: object
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          example: "400"
          pattern: ^[45]\d\d$
          type: string
        title:
          description: A short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization.
          example: Bad request
          type: string
      required:
        - status
        - detail
      type: object
    ErrorDocument:
      additionalProperties: false
      example:
        errors:
          - detail: Permission denied for this resource
            status: "403"
        jsonapi:
          version: "1.0"
      properties:
        errors:
          example:
            - detail: Permission denied for this resource
              status: "403"
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
        - jsonapi
        - errors
      type: object
    ErrorLink:
      additionalProperties: false
      description: A link that leads to further details about this particular occurrance
        of the problem.
      example:
        about: https://example.com/about_this_error
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    JsonApi:
      additionalProperties: false
      example:
        version: "1.0"
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          example: "1.0"
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)$
          type: string
      required:
        - version
      type: object
    LinkProperty:
      example: https://example.com/api/resource
      oneOf:
        - description: A string containing the link’s URL.
          example: https://example.com/api/resource
          type: string
        - additionalProperties: false
          example:
            href: https://example.com/api/resource
          properties:
            href:
              description: A string containing the link’s URL.
              example: https://example.com/api/resource
              type: string
            meta:
              $ref: '#/components/schemas/Meta'
          required:
            - href
          type: object
    Links:
      additionalProperties: false
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        related:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    Meta:
      additionalProperties: true
      description: Free-form object that may contain non-standard information.
      example:
        key1: value1
        key2:
          sub_key: sub_value
        key3:
          - array_value1
          - array_value2
      type: object
    PaginatedLinks:
      additionalProperties: false
      example:
        first: https://example.com/api/resource?ending_before=v1.eyJpZCI6IjExIn0K
        last: https://example.com/api/resource?starting_after=v1.eyJpZCI6IjMwIn0K
        next: https://example.com/api/resource?starting_after=v1.eyJpZCI6IjEwIn0K
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    PolicyActionIgnore:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/PolicyActionIgnoreData'
      required:
        - data
      type: object
    PolicyActionIgnoreData:
      additionalProperties: false
      properties:
        expires:
          example: "2024-03-16T00:00:00Z"
          format: date-time
          type: string
        ignore_type:
          enum:
            - wont-fix
            - not-vulnerable
            - temporary-ignore
          type: string
        reason:
          type: string
      required:
        - ignore_type
      type: object
    PolicyAttributes:
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/PolicyActionIgnore'
        action_type:
          enum:
            - ignore
          type: string
        conditions_group:
          $ref: '#/components/schemas/PolicyConditionsGroup'
        name:
          type: string
      required:
        - name
        - conditions_group
        - action
        - action_type
      type: object
    PolicyCondition:
      additionalProperties: false
      properties:
        field:
          description: |
            field refers to the type of identifier used in the condition of the policy.  The available value is versioned and hierarchical:
            - `snyk/asset/finding/v1` : identity of the finding scoped to a Snyk assets (e.g. a repository).
            The identities can be extracted from the fingerprints section of the SARIF, which is accessible via the Snyk CLI. More details can be found in the [CLI documentation](https://docs.snyk.io/snyk-cli/scan-and-maintain-projects-using-the-cli/snyk-cli-for-snyk-code/view-snyk-code-cli-results#export-test-results).
          enum:
            - snyk/asset/finding/v1
          type: string
        operator:
          description: |
            Operator for the field to value matching. Currently
            only 'includes' is supported, which does an exact
            string match on the value.
          enum:
            - includes
          type: string
        value:
          description: |
            The value of the field to match on.
          type: string
      required:
        - field
        - operator
        - value
      type: object
    PolicyConditionsGroup:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/PolicyCondition'
          maxItems: 1
          minItems: 1
          type: array
        logical_operator:
          description: The logical operator for the policy condition. Currently only
            'and' is supported.
          enum:
            - and
          type: string
      required:
        - logical_operator
        - conditions
      type: object
    PolicyEventAttributes:
      additionalProperties: false
      properties:
        changes:
          $ref: '#/components/schemas/PolicyEventChanges'
        comment:
          type: string
        created_at:
          example: "2024-03-16T00:00:00Z"
          format: date-time
          type: string
        created_by:
          $ref: '#/components/schemas/Principal'
        type:
          $ref: '#/components/schemas/PolicyEventType'
      required:
        - created_at
        - type
        - created_by
        - changes
      type: object
    PolicyEventChanges:
      additionalProperties: false
      properties:
        new_action:
          $ref: '#/components/schemas/PolicyActionIgnore'
        new_conditions_group:
          $ref: '#/components/schemas/PolicyConditionsGroup'
        new_name:
          type: string
        new_review:
          $ref: '#/components/schemas/PolicyReview'
        old_action:
          $ref: '#/components/schemas/PolicyActionIgnore'
        old_conditions_group:
          $ref: '#/components/schemas/PolicyConditionsGroup'
        old_name:
          type: string
        old_review:
          $ref: '#/components/schemas/PolicyReview'
      type: object
    PolicyEventResponse:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/PolicyEventAttributes'
        id:
          description: A unique identifier for this event.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        type:
          enum:
            - policy_event
          type: string
      required:
        - id
        - type
        - attributes
      type: object
    PolicyEventType:
      enum:
        - approve
        - reject
        - cancel
        - reopen
        - edit
        - create
      type: string
    PolicyResponse:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/PolicyResponseAttributes'
        id:
          description: A unique identifier for this particular occurrence of the policy.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        type:
          enum:
            - policy
          type: string
      required:
        - id
        - type
        - attributes
      type: object
    PolicyResponseAttributes:
      additionalProperties: false
      properties:
        action:
          $ref: '#/components/schemas/PolicyActionIgnore'
        action_type:
          enum:
            - ignore
          type: string
        conditions_group:
          $ref: '#/components/schemas/PolicyConditionsGroup'
        created_at:
          example: "2024-03-16T00:00:00Z"
          format: date-time
          type: string
        created_by:
          $ref: '#/components/schemas/Principal'
        name:
          type: string
        review:
          $ref: '#/components/schemas/PolicyReview'
        updated_at:
          example: "2024-03-16T00:00:00Z"
          format: date-time
          type: string
      required:
        - name
        - conditions_group
        - action
        - action_type
        - review
        - created_at
        - updated_at
      type: object
    PolicyReview:
      description: Review status.
      enum:
        - pending
        - approved
        - rejected
        - cancelled
        - not-required
      type: string
    Principal:
      properties:
        email:
          type: string
        id:
          description: The Snyk ID corresponding to this user or service account that
            created the policy
          format: uuid
          type: string
        name:
          description: Name of the user or service account that created the policy
          type: string
      required:
        - name
        - id
      type: object
    QueryVersion:
      description: Requested API version
      pattern: ^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$
      type: string
    SelfLink:
      additionalProperties: false
      example:
        self: https://example.com/api/this_resource
      properties:
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    UpdatePolicyAttributes:
      additionalProperties: false
      description: |
        Attributes of a policy that can be updated.
        At least one of 'name', 'conditions_group', 'action', or 'review' must be provided.

        In order to update the review field, the caller will need to have the
        "Review Ignore Request" permission.
      properties:
        action:
          $ref: '#/components/schemas/PolicyActionIgnore'
        conditions_group:
          $ref: '#/components/schemas/PolicyConditionsGroup'
        name:
          type: string
        review:
          $ref: '#/components/schemas/UpdatePolicyReview'
      type: object
    UpdatePolicyPayload:
      additionalProperties: false
      properties:
        data:
          additionalProperties: false
          properties:
            attributes:
              $ref: '#/components/schemas/UpdatePolicyAttributes'
            id:
              description: the UUID of the policy to update.
              example: f16c31b5-6129-4571-add8-d589da9be524
              format: uuid
              type: string
            meta:
              $ref: '#/components/schemas/Meta'
            type:
              enum:
                - policy
              type: string
          required:
            - type
            - attributes
          type: object
      required:
        - data
      type: object
    UpdatePolicyReview:
      description: |
        Review update.

        To provide an optional message relating to the review state change, add a string 'message' property to the 'meta' object.
      enum:
        - pending
        - approved
        - rejected
      type: string
info:
  title: policy-service
  version: 3.0.0
openapi: 3.0.3
paths:
  /openapi:
    get:
      description: List available versions of OpenAPI specification
      operationId: listAPIVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List of available versions is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
        - OpenAPI
  /openapi/{version}:
    get:
      description: Get OpenAPI specification effective at version.
      operationId: getAPIVersion
      parameters:
        - description: The requested version of the API
          in: path
          name: version
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OpenAPI specification matching requested version is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      tags:
        - OpenAPI
  /orgs/{org_id}/policies:
    get:
      description: |
        Get all policies for the requested organisation.

        *Org level Policy APIs Access Notice:* Access to our Org level Policy APIs is currently
        restricted via "snykCodeConsistentIgnores" feature flag and will result in a 403 Forbidden error
        without the flag enabled. Please contact your account representative for
        eligibility requirements.
      operationId: getOrgPolicies
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/StartingAfter'
        - $ref: '#/components/parameters/EndingBefore'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/Review'
        - description: Select only policies with an expiry strictly before the given
            time.
          in: query
          name: expires_before
          schema:
            example: "2024-03-16T00:00:00Z"
            format: date-time
            type: string
        - description: Select only policies with an expiry strictly past the given time.
          in: query
          name: expires_after
          schema:
            example: "2024-03-16T00:00:00Z"
            format: date-time
            type: string
        - description: Select only policies that never expire.
          in: query
          name: expires_never
          schema:
            example: true
            type: boolean
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/PolicyResponse'
                    type: array
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/PaginatedLinks'
                required:
                  - jsonapi
                  - data
                type: object
          description: The policies for the requested organisation.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
            x-envoy-to-remove-org-public-id:
              $ref: '#/components/headers/InternalGlooOrgIdHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
      summary: Get org-level policies
      tags:
        - Policies
      x-cerberus:
        authorization:
          featureFlag:
            tenant:
              pathId: org_id
            values:
              - snykCodeConsistentIgnores
          resource:
            entitlements:
              - api
            pathId: org_id
            permissions:
              - project.ignore.read
            type: org
        enableAccessAudit: true
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
        - '@snyk/ignores'
      x-snyk-api-releases:
        - "2024-10-15"
      x-snyk-api-resource: policies
      x-snyk-api-stability: ga
      x-snyk-api-version: "2024-10-15"
      x-stability-level: stable
    post:
      description: |
        Create a new org-level policy.

        *Org level Policy APIs Access Notice:* Access to our Org level Policy APIs is currently
        restricted via "snykCodeConsistentIgnores" feature flag and will result in a 403 Forbidden error
        without the flag enabled. Please contact your account representative for
        eligibility requirements.
      operationId: createOrgPolicy
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/OrgId'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreatePolicyPayload'
      responses:
        "201":
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/PolicyResponse'
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/SelfLink'
                required:
                  - jsonapi
                  - data
                type: object
          description: A single policy is returned if it is successfully created.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              schema:
                type: string
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
            x-envoy-to-remove-org-public-id:
              $ref: '#/components/headers/InternalGlooOrgIdHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      summary: Create a new org-level policy
      tags:
        - Policies
      x-cerberus:
        authorization:
          featureFlag:
            tenant:
              pathId: org_id
            values:
              - snykCodeConsistentIgnores
          resource:
            entitlements:
              - api
            pathId: org_id
            permissions:
              - project.ignore.create
            type: org
        enableAccessAudit: true
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
        - '@snyk/ignores'
      x-snyk-api-releases:
        - "2024-10-15"
      x-snyk-api-resource: policies
      x-snyk-api-stability: ga
      x-snyk-api-version: "2024-10-15"
      x-stability-level: stable
  /orgs/{org_id}/policies/{policy_id}:
    delete:
      description: |
        Delete an existing org-level policy.

        *Org level Policy APIs Access Notice:* Access to our Org level Policy APIs is currently
        restricted via "snykCodeConsistentIgnores" feature flag and will result in a 403 Forbidden error
        without the flag enabled. Please contact your account representative for
        eligibility requirements.
      operationId: deleteOrgPolicy
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/PolicyId'
      responses:
        "204":
          $ref: '#/components/responses/204'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "500":
          $ref: '#/components/responses/500'
      summary: Delete an org-level policy
      tags:
        - Policies
      x-cerberus:
        authorization:
          featureFlag:
            tenant:
              pathId: org_id
            values:
              - snykCodeConsistentIgnores
          resource:
            entitlements:
              - api
            pathId: org_id
            permissions:
              - project.ignore.delete
            type: org
        enableAccessAudit: true
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
        - '@snyk/ignores'
      x-snyk-api-releases:
        - "2024-10-15"
      x-snyk-api-resource: policies
      x-snyk-api-stability: ga
      x-snyk-api-version: "2024-10-15"
      x-stability-level: stable
    get:
      description: |
        Get a specific org-level policy based on its ID.

        *Org level Policy APIs Access Notice:* Access to our Org level Policy APIs is currently
        restricted via "snykCodeConsistentIgnores" feature flag and will result in a 403 Forbidden error
        without the flag enabled. Please contact your account representative for
        eligibility requirements.
      operationId: getOrgPolicy
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/PolicyId'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/PolicyResponse'
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/Links'
                required:
                  - jsonapi
                  - data
                type: object
          description: The requested policy.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
            x-envoy-to-remove-org-public-id:
              $ref: '#/components/headers/InternalGlooOrgIdHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
      summary: Get an org-level policy
      tags:
        - Policies
      x-cerberus:
        authorization:
          featureFlag:
            tenant:
              pathId: org_id
            values:
              - snykCodeConsistentIgnores
          resource:
            entitlements:
              - api
            pathId: org_id
            permissions:
              - project.ignore.read
            type: org
        enableAccessAudit: true
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
        - '@snyk/ignores'
      x-snyk-api-releases:
        - "2024-10-15"
      x-snyk-api-resource: policies
      x-snyk-api-stability: ga
      x-snyk-api-version: "2024-10-15"
      x-stability-level: stable
    patch:
      description: "Update the org-level policy. \n\n*Org level Policy APIs Access
        Notice:* Access to our Org level Policy APIs is currently\nrestricted via
        \"snykCodeConsistentIgnores\" feature flag and will result in a 403 Forbidden
        error\nwithout the flag enabled. Please contact your account representative
        for\neligibility requirements.\n"
      operationId: updateOrgPolicy
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/PolicyId'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyPayload'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    $ref: '#/components/schemas/PolicyResponse'
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/SelfLink'
                required:
                  - jsonapi
                  - data
                type: object
          description: A single policy is returned if it is successfully updated.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            location:
              schema:
                type: string
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
            x-envoy-to-remove-org-public-id:
              $ref: '#/components/headers/InternalGlooOrgIdHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
      summary: Update an org-level policy
      tags:
        - Policies
      x-cerberus:
        authorization:
          featureFlag:
            tenant:
              pathId: org_id
            values:
              - snykCodeConsistentIgnores
          resource:
            entitlements:
              - api
            pathId: org_id
            permissions:
              - project.ignore.edit
            type: org
        enableAccessAudit: true
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
        - '@snyk/ignores'
      x-snyk-api-releases:
        - "2024-10-15"
      x-snyk-api-resource: policies
      x-snyk-api-stability: ga
      x-snyk-api-version: "2024-10-15"
      x-stability-level: stable
  /orgs/{org_id}/policies/{policy_id}/events:
    get:
      description: |
        Retrieve the event history for the given policy.

        *Org level Policy APIs Access Notice:* Access to our Org level Policy APIs is currently
        restricted via "snykCodeConsistentIgnores" and "ignoreApprovalWorkflow" feature flags
        and will result in a 403 Forbidden error without the flag enabled. Please contact your
        account representative for eligibility requirements.
      operationId: getOrgPolicyEvents
      parameters:
        - $ref: '#/components/parameters/Version'
        - $ref: '#/components/parameters/StartingAfter'
        - $ref: '#/components/parameters/EndingBefore'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/OrgId'
        - $ref: '#/components/parameters/PolicyId'
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                additionalProperties: false
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/PolicyEventResponse'
                    type: array
                  jsonapi:
                    $ref: '#/components/schemas/JsonApi'
                  links:
                    $ref: '#/components/schemas/PaginatedLinks'
                required:
                  - jsonapi
                  - data
                type: object
          description: The requested policy.
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
            x-envoy-to-remove-normalized-request-path:
              $ref: '#/components/headers/InternalGlooNormalizedPathHeader'
            x-envoy-to-remove-org-public-id:
              $ref: '#/components/headers/InternalGlooOrgIdHeader'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "403":
          $ref: '#/components/responses/403'
        "404":
          $ref: '#/components/responses/404'
      summary: List org policy events
      tags:
        - Policies
      x-cerberus:
        authorization:
          featureFlag:
            tenant:
              pathId: org_id
            values:
              - snykCodeConsistentIgnores
              - ignoreApprovalWorkflow
          resource:
            entitlements:
              - api
            pathId: org_id
            permissions:
              - project.ignore.read
            type: org
        enableAccessAudit: true
      x-snyk-api-lifecycle: released
      x-snyk-api-owners:
        - '@snyk/ignores'
      x-snyk-api-releases:
        - 2024-10-13~beta
      x-snyk-api-resource: policyevents
      x-snyk-api-stability: beta
      x-snyk-api-version: 2024-10-13~beta
      x-stability-level: beta
servers:
  - description: policy-service
    url: /rest
tags:
  - description: The OpenAPI specification for policy-service.
    name: OpenAPI
x-cerberus:
  authentication:
    strategies:
      - InternalJWT: {}
x-snyk-api-version: "2024-10-15"
